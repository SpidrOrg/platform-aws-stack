
[0m[1m[32mNo changes.[0m[1m Your infrastructure matches the configuration.[0m

[0mTerraform has compared your real infrastructure against your configuration
and found no differences, so no changes are needed.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_layer_version.this[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_layer_version" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mcompatible_runtimes[0m[0m         = [
          [32m+[0m [0m"python3.8",
        ]
      [32m+[0m [0m[1m[0mcreated_date[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mfilename[0m[0m                    = "new-pytrend.zip"
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mlayer_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mlayer_name[0m[0m                  = "new-pytrends"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                     = (known after apply)
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_cognito_user_pool.user_pool[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cognito_user_pool" "user_pool" {
      [32m+[0m [0m[1m[0malias_attributes[0m[0m           = [
          [32m+[0m [0m"email",
          [32m+[0m [0m"preferred_username",
        ]
      [32m+[0m [0m[1m[0marn[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mauto_verified_attributes[0m[0m   = [
          [32m+[0m [0m"email",
        ]
      [32m+[0m [0m[1m[0mcreation_date[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mcustom_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mdeletion_protection[0m[0m        = "INACTIVE"
      [32m+[0m [0m[1m[0mdomain[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0memail_verification_message[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0memail_verification_subject[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mendpoint[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mestimated_number_of_users[0m[0m  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified_date[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mmfa_configuration[0m[0m          = "OPTIONAL"
      [32m+[0m [0m[1m[0mname[0m[0m                       = "krny-terraform-pool-uat"
      [32m+[0m [0m[1m[0msms_authentication_message[0m[0m = "Your temporary password is {####}."
      [32m+[0m [0m[1m[0msms_verification_message[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                   = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }

      [32m+[0m [0madmin_create_user_config {
          [32m+[0m [0m[1m[0mallow_admin_create_user_only[0m[0m = true

          [32m+[0m [0minvite_message_template {
              [32m+[0m [0m[1m[0memail_message[0m[0m = "Your username is {username} and your temporary password is '{####}'."
              [32m+[0m [0m[1m[0memail_subject[0m[0m = "Your new account."
              [32m+[0m [0m[1m[0msms_message[0m[0m   = "Your username is {username} and your temporary password is '{####}'."
            }
        }

      [32m+[0m [0mdevice_configuration {
          [32m+[0m [0m[1m[0mchallenge_required_on_new_device[0m[0m      = true
          [32m+[0m [0m[1m[0mdevice_only_remembered_on_user_prompt[0m[0m = true
        }

      [32m+[0m [0memail_configuration {
          [32m+[0m [0m[1m[0memail_sending_account[0m[0m = "COGNITO_DEFAULT"
        }

      [32m+[0m [0mpassword_policy {
          [32m+[0m [0m[1m[0mminimum_length[0m[0m                   = 20
          [32m+[0m [0m[1m[0mrequire_lowercase[0m[0m                = true
          [32m+[0m [0m[1m[0mrequire_numbers[0m[0m                  = true
          [32m+[0m [0m[1m[0mrequire_symbols[0m[0m                  = true
          [32m+[0m [0m[1m[0mrequire_uppercase[0m[0m                = true
          [32m+[0m [0m[1m[0mtemporary_password_validity_days[0m[0m = 1
        }

      [32m+[0m [0msms_configuration {
          [32m+[0m [0m[1m[0mexternal_id[0m[0m    = (known after apply)
          [32m+[0m [0m[1m[0msns_caller_arn[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0msns_region[0m[0m     = (known after apply)
        }

      [32m+[0m [0msoftware_token_mfa_configuration {
          [32m+[0m [0m[1m[0menabled[0m[0m = true
        }

      [32m+[0m [0muser_pool_add_ons {
          [32m+[0m [0m[1m[0madvanced_security_mode[0m[0m = "OFF"
        }

      [32m+[0m [0musername_configuration {
          [32m+[0m [0m[1m[0mcase_sensitive[0m[0m = false
        }

      [32m+[0m [0mverification_message_template {
          [32m+[0m [0m[1m[0mdefault_email_option[0m[0m  = "CONFIRM_WITH_CODE"
          [32m+[0m [0m[1m[0memail_message[0m[0m         = "Your verification code is {####}."
          [32m+[0m [0m[1m[0memail_message_by_link[0m[0m = "Please click the link below to verify your email address. {##Verify Email##}."
          [32m+[0m [0m[1m[0memail_subject[0m[0m         = "Your Verification Code"
          [32m+[0m [0m[1m[0memail_subject_by_link[0m[0m = "Your Verification Link"
          [32m+[0m [0m[1m[0msms_message[0m[0m           = "Your verification code is {####}."
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mclient_secrets[0m[0m = (sensitive value)
  [32m+[0m [0m[1m[0mclients[0m[0m        = {}
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m = true
  [32m+[0m [0m[1m[0muser_pool[0m[0m      = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=c0dd8ed446c506aed17077817e88034b9a4e03892fe894bf7b8c87cf202e16be][0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=b1515e9b8b93beef94d5f0bea54ab9f76783e3fe9867226f07a1dacb63147466][0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=92548cfbe7d6f0606b3ea695242e0015015d27839a31583f1c1d8c62ac5dc58f][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=fef3a67b5334383466ae660d3d6c3a5244198807c1685c43563562df62175918][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Read complete after 1s [id=993809450021][0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=fef3a67b5334383466ae660d3d6c3a5244198807c1685c43563562df62175918][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=6f40677bdf696ca60ea003f6873e751fb3882568b71352e93fa65b880bd5f23a][0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "similarweb-glue-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:*",
                          [32m+[0m [0m"s3:Get*",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"ec2:DescribeVpcEndpoints",
                          [32m+[0m [0m"ec2:DescribeRouteTables",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeVpcAttribute",
                          [32m+[0m [0m"iam:ListRolePolicies",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"cloudwatch:PutMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:CreateBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:ListObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/reference-data/transformation/variable-treatment/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/cleaned-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/transformed-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/temp-dir/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-packages/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-shell-scripts/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::crawler-public*",
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:/aws-glue/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0m"ForAllValues:StringEquals" = {
                              [32m+[0m [0m"aws:TagKeys" = [
                                  [32m+[0m [0m"aws-glue-service-resource",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:ec2:*:*:network-interface/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:security-group/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:instance/*",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "glue.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "similarweb-glue-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "similarweb-glue-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "similarweb-glue-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "similarweb-glue-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=596c1e8c6f0c043fb2ddfc93050b4ede8545f93882664db6bcd9ca8cd708b37d][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=fef3a67b5334383466ae660d3d6c3a5244198807c1685c43563562df62175918][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
 [36m<=[0m read (data resources)
[0m
Terraform will perform the following actions:

[1m  # data.aws_iam_policy_document.bucket_policy[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "bucket_policy" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m = (known after apply)

      [32m+[0m [0mstatement {
          [32m+[0m [0m[1m[0mactions[0m[0m   = [
              [32m+[0m [0m"s3:*",
            ]
          [32m+[0m [0m[1m[0mresources[0m[0m = [
              [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat",
            ]

          [32m+[0m [0mprincipals {
              [32m+[0m [0m[1m[0midentifiers[0m[0m = [
                  [32m+[0m [0m(known after apply),
                ]
              [32m+[0m [0m[1m[0mtype[0m[0m        = "AWS"
            }
        }
    }

[1m  # aws_iam_role.s3-role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "s3-role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.s3_bucket.data.aws_iam_policy_document.combined[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "combined" {
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0msource_policy_documents[0m[0m = (known after apply)
    }

[1m  # module.s3_bucket.data.aws_iam_policy_document.deny_insecure_transport[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "deny_insecure_transport" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m = (known after apply)

      [32m+[0m [0mstatement {
          [32m+[0m [0m[1m[0mactions[0m[0m   = [
              [32m+[0m [0m"s3:*",
            ]
          [32m+[0m [0m[1m[0meffect[0m[0m    = "Deny"
          [32m+[0m [0m[1m[0mresources[0m[0m = [
              [32m+[0m [0m(known after apply),
              [32m+[0m [0m(known after apply),
            ]
          [32m+[0m [0m[1m[0msid[0m[0m       = "denyInsecureTransport"

          [32m+[0m [0mcondition {
              [32m+[0m [0m[1m[0mtest[0m[0m     = "Bool"
              [32m+[0m [0m[1m[0mvalues[0m[0m   = [
                  [32m+[0m [0m"false",
                ]
              [32m+[0m [0m[1m[0mvariable[0m[0m = "aws:SecureTransport"
            }

          [32m+[0m [0mprincipals {
              [32m+[0m [0m[1m[0midentifiers[0m[0m = [
                  [32m+[0m [0m"*",
                ]
              [32m+[0m [0m[1m[0mtype[0m[0m        = "*"
            }
        }
    }

[1m  # module.s3_bucket.aws_s3_bucket.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = "krny-spi-codebase-uat"
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_prefix[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = {
          [32m+[0m [0m"EnvironmentClass" = "dev"
          [32m+[0m [0m"ManagedBy"        = "terraform"
          [32m+[0m [0m"Name"             = "krny-spi-codebase-uat"
          [32m+[0m [0m"Owner"            = "Xebia"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = {
          [32m+[0m [0m"EnvironmentClass" = "dev"
          [32m+[0m [0m"ManagedBy"        = "terraform"
          [32m+[0m [0m"Name"             = "krny-spi-codebase-uat"
          [32m+[0m [0m"Owner"            = "Xebia"
        }
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0menabled[0m[0m = false
          [32m+[0m [0m[1m[0mid[0m[0m      = "current_transition"
          [32m+[0m [0m[1m[0mtags[0m[0m    = {
              [32m+[0m [0m"autoclean" = "true"
              [32m+[0m [0m"rule"      = "log"
            }

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = 90
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = 30
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = "GLACIER"
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = true
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = false
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # module.s3_bucket.aws_s3_bucket_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "this" {
      [32m+[0m [0m[1m[0mbucket[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
    }

[1m  # module.s3_bucket.aws_s3_bucket_public_access_block.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "this" {
      [32m+[0m [0m[1m[0mblock_public_acls[0m[0m       = true
      [32m+[0m [0m[1m[0mblock_public_policy[0m[0m     = true
      [32m+[0m [0m[1m[0mbucket[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mignore_public_acls[0m[0m      = true
      [32m+[0m [0m[1m[0mrestrict_public_buckets[0m[0m = true
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["dashboards"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "dashboards/"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["functions/covid/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "functions/covid//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["functions/fred/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "functions/fred//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["functions/google_trends/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "functions/google_trends//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["functions/ihs/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "functions/ihs//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["functions/moodys/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "functions/moodys//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["functions/similar_web/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "functions/similar_web//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["functions/yahoo_function/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "functions/yahoo_function//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["glue/python-packages/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "glue/python-packages//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["glue/python-shell-scripts"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "glue/python-shell-scripts/"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["glue/python-shell-scripts/temp-dir/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "glue/python-shell-scripts/temp-dir//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[0m[1mPlan:[0m 15 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0ms3_bucket_arn[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0ms3_bucket_id[0m[0m  = (known after apply)
[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0m  with module.s3_bucket.aws_s3_bucket.this[0],
[33mâ”‚[0m [0m  on modules\terraform-aws-s3-bucket-2.14.1\main.tf line 5, in resource "aws_s3_bucket" "this":
[33mâ”‚[0m [0m   5: resource "aws_s3_bucket" "this" [4m{[0m[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0mUse the aws_s3_bucket_lifecycle_configuration resource instead
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m(and 2 more similar warnings elsewhere)
[33mâ•µ[0m[0m
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 1s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "fred-func-Policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/fred/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:StartJobRun",
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-fred"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:BatchGet*",
                          [32m+[0m [0m"dynamodb:DescribeTable",
                          [32m+[0m [0m"dynamodb:Get*",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                          [32m+[0m [0m"dynamodb:BatchWrite*",
                          [32m+[0m [0m"dynamodb:CreateTable",
                          [32m+[0m [0m"dynamodb:Delete*",
                          [32m+[0m [0m"dynamodb:Update*",
                          [32m+[0m [0m"dynamodb:PutItem",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-fred",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"secretsmanager:GetSecretValue",
                          [32m+[0m [0m"secretsmanager:DescribeSecret",
                          [32m+[0m [0m"secretsmanager:ListSecrets",
                          [32m+[0m [0m"kms:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "fred-func-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "fred-func-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "fred-func-Policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "fred-func-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
Releasing state lock. This may take a few moments...
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "google-client-func-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "LambdaBasicExecution"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:BatchGet*",
                          [32m+[0m [0m"dynamodb:DescribeTable",
                          [32m+[0m [0m"dynamodb:Get*",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                          [32m+[0m [0m"dynamodb:BatchWrite*",
                          [32m+[0m [0m"dynamodb:CreateTable",
                          [32m+[0m [0m"dynamodb:Delete*",
                          [32m+[0m [0m"dynamodb:Update*",
                          [32m+[0m [0m"dynamodb:PutItem",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-google-trends-client",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"secretsmanager:GetSecretValue",
                          [32m+[0m [0m"secretsmanager:DescribeSecret",
                          [32m+[0m [0m"secretsmanager:ListSecrets",
                          [32m+[0m [0m"kms:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "google-client-func-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "google-client-func-role"
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "google-client-func-role"
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "google-client-func-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "google-client-func-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
Releasing state lock. This may take a few moments...
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=cb4b9f3736ecd948159562baeae7e83911dc2ff64886cfc193fa2e6108823503][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_layer_version.this[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_layer_version" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mcompatible_runtimes[0m[0m         = [
          [32m+[0m [0m"python3.8",
        ]
      [32m+[0m [0m[1m[0mcreated_date[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mfilename[0m[0m                    = "meteostat-1.6.5-py3-none-any.whl"
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mlayer_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mlayer_name[0m[0m                  = "metostat"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                     = (known after apply)
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=b786c6b6377c4e59edbf8e644eb989548d16100604c51ead53860d55a6e12173][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=fef3a67b5334383466ae660d3d6c3a5244198807c1685c43563562df62175918][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_kms_alias.kms_key_alias[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_kms_alias" "kms_key_alias" {
      [32m+[0m [0m[1m[0marn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m           = "alias/krny-kms-key-uat"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mtarget_key_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtarget_key_id[0m[0m  = (known after apply)
    }

[1m  # aws_kms_key.kms_key[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_kms_key" "kms_key" {
      [32m+[0m [0m[1m[0marn[0m[0m                                = (known after apply)
      [32m+[0m [0m[1m[0mbypass_policy_lockout_safety_check[0m[0m = false
      [32m+[0m [0m[1m[0mcustomer_master_key_spec[0m[0m           = "SYMMETRIC_DEFAULT"
      [32m+[0m [0m[1m[0mdeletion_window_in_days[0m[0m            = 30
      [32m+[0m [0m[1m[0mdescription[0m[0m                        = "KMS key for uat-krny"
      [32m+[0m [0m[1m[0menable_key_rotation[0m[0m                = true
      [32m+[0m [0m[1m[0mid[0m[0m                                 = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m                         = true
      [32m+[0m [0m[1m[0mkey_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mkey_usage[0m[0m                          = "ENCRYPT_DECRYPT"
      [32m+[0m [0m[1m[0mmulti_region[0m[0m                       = false
      [32m+[0m [0m[1m[0mtags_all[0m[0m                           = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[0m[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0malias_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0malias_name[0m[0m = "alias/krny-kms-key-uat"
  [32m+[0m [0m[1m[0mkey_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0mkey_id[0m[0m     = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_layer_version.this[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_layer_version" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mcompatible_runtimes[0m[0m         = [
          [32m+[0m [0m"python3.9",
        ]
      [32m+[0m [0m[1m[0mcreated_date[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mfilename[0m[0m                    = "openpyxl.zip"
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mlayer_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mlayer_name[0m[0m                  = "openpyxl"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                     = (known after apply)
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "moodys-glue-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:*",
                          [32m+[0m [0m"s3:Get*",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"ec2:DescribeVpcEndpoints",
                          [32m+[0m [0m"ec2:DescribeRouteTables",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeVpcAttribute",
                          [32m+[0m [0m"iam:ListRolePolicies",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"cloudwatch:PutMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:CreateBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:ListObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/reference-data/transformation/variable-treatment/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/cleaned-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/transformed-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/temp-dir/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-packages/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-shell-scripts/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::crawler-public*",
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:/aws-glue/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0m"ForAllValues:StringEquals" = {
                              [32m+[0m [0m"aws:TagKeys" = [
                                  [32m+[0m [0m"aws-glue-service-resource",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:ec2:*:*:network-interface/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:security-group/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:instance/*",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "glue.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "moodys-glue-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "moodys-glue-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "moodys-glue-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "moodys-glue-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=0f7879c076cb4ffae8b257f00e88357610d20dd8b961d3d553752d306ac1fff1][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_classifier.csv_classifier_1[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_classifier" "csv_classifier_1" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m = "transformeddata_crawler_classifier"

      [32m+[0m [0mcsv_classifier {
          [32m+[0m [0m[1m[0mallow_single_column[0m[0m    = true
          [32m+[0m [0m[1m[0mcontains_header[0m[0m        = "PRESENT"
          [32m+[0m [0m[1m[0mdelimiter[0m[0m              = ","
          [32m+[0m [0m[1m[0mdisable_value_trimming[0m[0m = false
          [32m+[0m [0m[1m[0mheader[0m[0m                 = []
          [32m+[0m [0m[1m[0mquote_symbol[0m[0m           = "\""
        }
    }

[1m  # aws_glue_classifier.csv_classifier_2[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_classifier" "csv_classifier_2" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m = "cleaneddata_crawler_classifier"

      [32m+[0m [0mcsv_classifier {
          [32m+[0m [0m[1m[0mallow_single_column[0m[0m    = false
          [32m+[0m [0m[1m[0mcontains_header[0m[0m        = "PRESENT"
          [32m+[0m [0m[1m[0mdelimiter[0m[0m              = ","
          [32m+[0m [0m[1m[0mdisable_value_trimming[0m[0m = true
          [32m+[0m [0m[1m[0mheader[0m[0m                 = []
          [32m+[0m [0m[1m[0mquote_symbol[0m[0m           = "\""
        }
    }

[0m[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mclassifier_name_1[0m[0m = "transformeddata_crawler_classifier"
  [32m+[0m [0m[1m[0mclassifier_name_2[0m[0m = "cleaneddata_crawler_classifier"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "google-glue-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:*",
                          [32m+[0m [0m"s3:Get*",
                          [32m+[0m [0m"kms:*",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"ec2:DescribeVpcEndpoints",
                          [32m+[0m [0m"ec2:DescribeRouteTables",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeVpcAttribute",
                          [32m+[0m [0m"iam:ListRolePolicies",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"cloudwatch:PutMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:CreateBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:ListObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/reference-data/transformation/variable-treatment/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/cleaned-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/transformed-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/temp-dir/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-packages/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-shell-scripts/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::crawler-public*",
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:/aws-glue/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0m"ForAllValues:StringEquals" = {
                              [32m+[0m [0m"aws:TagKeys" = [
                                  [32m+[0m [0m"aws-glue-service-resource",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:ec2:*:*:network-interface/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:security-group/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:instance/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:GetItem",
                          [32m+[0m [0m"dynamodb:BatchGetItem",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:287882505924:table/yahoo_securities",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "glue.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "google-glue-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "google-glue-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "google-glue-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "google-glue-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
 [36m<=[0m read (data resources)
[0m
Terraform will perform the following actions:

[1m  # data.aws_iam_policy_document.bucket_policy[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "bucket_policy" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m = (known after apply)

      [32m+[0m [0mstatement {
          [32m+[0m [0m[1m[0mactions[0m[0m   = [
              [32m+[0m [0m"s3:*",
            ]
          [32m+[0m [0m[1m[0mresources[0m[0m = [
              [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat",
            ]

          [32m+[0m [0mprincipals {
              [32m+[0m [0m[1m[0midentifiers[0m[0m = [
                  [32m+[0m [0m(known after apply),
                ]
              [32m+[0m [0m[1m[0mtype[0m[0m        = "AWS"
            }
        }
    }

[1m  # aws_iam_role.s3-role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "s3-role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.s3_bucket.data.aws_iam_policy_document.combined[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "combined" {
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0msource_policy_documents[0m[0m = (known after apply)
    }

[1m  # module.s3_bucket.data.aws_iam_policy_document.deny_insecure_transport[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "deny_insecure_transport" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m = (known after apply)

      [32m+[0m [0mstatement {
          [32m+[0m [0m[1m[0mactions[0m[0m   = [
              [32m+[0m [0m"s3:*",
            ]
          [32m+[0m [0m[1m[0meffect[0m[0m    = "Deny"
          [32m+[0m [0m[1m[0mresources[0m[0m = [
              [32m+[0m [0m(known after apply),
              [32m+[0m [0m(known after apply),
            ]
          [32m+[0m [0m[1m[0msid[0m[0m       = "denyInsecureTransport"

          [32m+[0m [0mcondition {
              [32m+[0m [0m[1m[0mtest[0m[0m     = "Bool"
              [32m+[0m [0m[1m[0mvalues[0m[0m   = [
                  [32m+[0m [0m"false",
                ]
              [32m+[0m [0m[1m[0mvariable[0m[0m = "aws:SecureTransport"
            }

          [32m+[0m [0mprincipals {
              [32m+[0m [0m[1m[0midentifiers[0m[0m = [
                  [32m+[0m [0m"*",
                ]
              [32m+[0m [0m[1m[0mtype[0m[0m        = "*"
            }
        }
    }

[1m  # module.s3_bucket.aws_s3_bucket.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = "krny-spi-ext-sources-uat"
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_prefix[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = {
          [32m+[0m [0m"EnvironmentClass" = "dev"
          [32m+[0m [0m"ManagedBy"        = "terraform"
          [32m+[0m [0m"Name"             = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"Owner"            = "devops"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = {
          [32m+[0m [0m"EnvironmentClass" = "dev"
          [32m+[0m [0m"ManagedBy"        = "terraform"
          [32m+[0m [0m"Name"             = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"Owner"            = "devops"
        }
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0menabled[0m[0m = false
          [32m+[0m [0m[1m[0mid[0m[0m      = "current_transition"
          [32m+[0m [0m[1m[0mtags[0m[0m    = {
              [32m+[0m [0m"autoclean" = "true"
              [32m+[0m [0m"rule"      = "log"
            }

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = 90
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = 30
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = "GLACIER"
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = true
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = false
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # module.s3_bucket.aws_s3_bucket_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "this" {
      [32m+[0m [0m[1m[0mbucket[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
    }

[1m  # module.s3_bucket.aws_s3_bucket_public_access_block.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "this" {
      [32m+[0m [0m[1m[0mblock_public_acls[0m[0m       = true
      [32m+[0m [0m[1m[0mblock_public_policy[0m[0m     = true
      [32m+[0m [0m[1m[0mbucket[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mignore_public_acls[0m[0m      = true
      [32m+[0m [0m[1m[0mrestrict_public_buckets[0m[0m = true
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["cleaned-data/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "cleaned-data//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/covid/covidexternal/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/covid/covidexternal//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/covid/data/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/covid/data//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/fred/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/fred//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/ihs/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/ihs//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/ihs/data/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/ihs/data//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/ihs/manual-upload/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/ihs/manual-upload//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/ihs/manual-upload/ihs-historical/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/ihs/manual-upload/ihs-historical//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/ihs/manual-upload/ihs-pp/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/ihs/manual-upload/ihs-pp//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/meteostat/config/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/meteostat/config//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/meteostat/data/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/meteostat/data//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/meteostat/script/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/meteostat/script//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/moodys/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/moodys//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/similar_web/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/similar_web//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/similar_web/manual_upload/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/similar_web/manual_upload//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/similar_web/manual_upload/raw_conversion_dashboard/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/similar_web/manual_upload/raw_conversion_dashboard//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/similar_web/manual_upload/raw_totaltraffic_sources/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/similar_web/manual_upload/raw_totaltraffic_sources//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["raw-data/yahoo_finance/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "raw-data/yahoo_finance//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["reference-data/feature_no_ihs"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "reference-data/feature_no_ihs/"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["reference-data/ingestion/ihs"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "reference-data/ingestion/ihs/"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["reference-data/ingestion/similarweb"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "reference-data/ingestion/similarweb/"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["reference-data/transformation/variable-treatment"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "reference-data/transformation/variable-treatment/"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[1m  # module.sensing-bucket-folders.aws_s3_object.data_folders["transformed-data/"][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_object" "data_folders" {
      [32m+[0m [0m[1m[0macl[0m[0m                    = "private"
      [32m+[0m [0m[1m[0mbucket[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mcontent_type[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0metag[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m          = false
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mkey[0m[0m                    = "transformed-data//"
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mserver_side_encryption[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mstorage_class[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mversion_id[0m[0m             = (known after apply)
    }

[0m[1mPlan:[0m 28 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0ms3_bucket_arn[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0ms3_bucket_id[0m[0m  = (known after apply)
[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0m  with module.s3_bucket.aws_s3_bucket.this[0],
[33mâ”‚[0m [0m  on modules\terraform-aws-s3-bucket-2.14.1\main.tf line 5, in resource "aws_s3_bucket" "this":
[33mâ”‚[0m [0m   5: resource "aws_s3_bucket" "this" [4m{[0m[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0mUse the aws_s3_bucket_versioning resource instead
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m(and 2 more similar warnings elsewhere)
[33mâ•µ[0m[0m
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
Releasing state lock. This may take a few moments...

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_trigger.example[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_trigger" "example" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0menabled[0m[0m  = true
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m     = "dev_krny_meteostat_tf_trigger"
      [32m+[0m [0m[1m[0mschedule[0m[0m = "cron(0 0 5 * ? *)"
      [32m+[0m [0m[1m[0mstate[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtype[0m[0m     = "SCHEDULED"

      [32m+[0m [0mactions {
          [32m+[0m [0m[1m[0mjob_name[0m[0m = "dev_krny_meteostat_tf"
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
Releasing state lock. This may take a few moments...
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 1s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "similarweb-func-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/similar_web/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                          [32m+[0m [0m"glue:StartJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-similarweb"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "similarweb-func-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "similarweb-func-role"
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "similarweb-func-role"
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "similarweb-func-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "similarweb-func-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=fef3a67b5334383466ae660d3d6c3a5244198807c1685c43563562df62175918][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=b57ac27c8f7b459818a832a657e7e49c41ebd710f6e59656e835f7c127a7ec99][0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=5213034ef9c33996b2857f9520741c1912b03e10c10c3debfbb2f6ab8c6d3917][0m
[0m[1mdata.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Reading...[0m[0m
[0m[1mdata.aws_availability_zones.az: Reading...[0m[0m
[0m[1mdata.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Reading...[0m[0m
[0m[1mdata.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]: Read complete after 0s [id=1021377347][0m
[0m[1mdata.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]: Read complete after 0s [id=2053943846][0m
Releasing state lock. This may take a few moments...
[0m[1mdata.aws_availability_zones.az: Read complete after 0s [id=us-east-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_cloudwatch_log_group.flow_log[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_log_group" "flow_log" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mretention_in_days[0m[0m = 0
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m      = false
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_default_security_group.vpc_sg[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_default_security_group" "vpc_sg" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = ""
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = (known after apply)
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = (known after apply)
    }

[1m  # aws_eip.nat[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mcarrier_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcustomer_owned_ip[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdomain[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0minstance[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_dns[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ipv4_pool[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Name" = "sensing-solution-us-east-1a"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "sensing-solution-us-east-1a"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mvpc[0m[0m                  = true
    }

[1m  # aws_flow_log.vpc_flow_log[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_flow_log" "vpc_flow_log" {
      [32m+[0m [0m[1m[0marn[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0miam_role_arn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mlog_destination[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mlog_destination_type[0m[0m     = "cloud-watch-logs"
      [32m+[0m [0m[1m[0mlog_format[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mlog_group_name[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mmax_aggregation_interval[0m[0m = 600
      [32m+[0m [0m[1m[0mtags_all[0m[0m                 = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtraffic_type[0m[0m             = "ALL"
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                   = (known after apply)
    }

[1m  # aws_iam_policy.vpc_flow_log_cloudwatch[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "vpc_flow_log_cloudwatch" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = "vpc-flow-log-to-cloudwatch-"
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:PutLogEvents",
                          [32m+[0m [0m"logs:DescribeLogStreams",
                          [32m+[0m [0m"logs:DescribeLogGroups",
                          [32m+[0m [0m"logs:CreateLogStream",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "AWSVPCFlowLogsPushToCloudWatch"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.vpc_flow_log_cloudwatch[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "vpc_flow_log_cloudwatch" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "vpc-flow-logs.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = "AWSVPCFlowLogsAssumeRole"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = "vpc-flow-log-role-"
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "vpc_flow_log_cloudwatch" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = (known after apply)
    }

[1m  # aws_internet_gateway.igw[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m [0m[1m[0marn[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m     = {
          [32m+[0m [0m"Name" = "sensing-solution"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "sensing-solution"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m   = (known after apply)
    }

[1m  # aws_nat_gateway.nat[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m [0m[1m[0mallocation_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0massociation_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mconnectivity_type[0m[0m    = "public"
      [32m+[0m [0m[1m[0mid[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mprivate_ip[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpublic_ip[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                 = {
          [32m+[0m [0m"Name" = "sensing-solution-us-east-1a"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m             = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "sensing-solution-us-east-1a"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_route.private_nat_gateway[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "private_nat_gateway" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mnat_gateway_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                  = (known after apply)

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "5m"
        }
    }

[1m  # aws_route.public_internet_gateway[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route" "public_internet_gateway" {
      [32m+[0m [0m[1m[0mdestination_cidr_block[0m[0m = "0.0.0.0/0"
      [32m+[0m [0m[1m[0mgateway_id[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0minstance_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0minstance_owner_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mnetwork_interface_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0morigin[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mstate[0m[0m                  = (known after apply)

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "5m"
        }
    }

[1m  # aws_route_table.private[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "sensing-solution-private"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "sensing-solution-private"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table.public[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpropagating_vgws[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mroute[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "sensing-solution-public"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "sensing-solution-public"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m           = (known after apply)
    }

[1m  # aws_route_table_association.private[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.private[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.public[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_route_table_association.public[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mroute_table_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msubnet_id[0m[0m      = (known after apply)
    }

[1m  # aws_subnet.private[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.32.0/20"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "krny-spi-pvt-1a"
          [32m+[0m [0m"Type" = "Private"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "krny-spi-pvt-1a"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
          [32m+[0m [0m"Type"        = "Private"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.private[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.48.0/20"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "krny-spi-pvt-1b"
          [32m+[0m [0m"Type" = "Private"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "krny-spi-pvt-1b"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
          [32m+[0m [0m"Type"        = "Private"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.public[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-1a"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.0.0/20"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "krny-spi-pub-1a"
          [32m+[0m [0m"Type" = "Public"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "krny-spi-pub-1a"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
          [32m+[0m [0m"Type"        = "Public"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_subnet.public[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m [0m[1m[0marn[0m[0m                                            = (known after apply)
      [32m+[0m [0m[1m[0massign_ipv6_address_on_creation[0m[0m                = false
      [32m+[0m [0m[1m[0mavailability_zone[0m[0m                              = "us-east-1b"
      [32m+[0m [0m[1m[0mavailability_zone_id[0m[0m                           = (known after apply)
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                                     = "10.0.16.0/20"
      [32m+[0m [0m[1m[0menable_dns64[0m[0m                                   = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_a_record_on_launch[0m[0m    = false
      [32m+[0m [0m[1m[0menable_resource_name_dns_aaaa_record_on_launch[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                                             = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_association_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mipv6_native[0m[0m                                    = false
      [32m+[0m [0m[1m[0mmap_public_ip_on_launch[0m[0m                        = false
      [32m+[0m [0m[1m[0mowner_id[0m[0m                                       = (known after apply)
      [32m+[0m [0m[1m[0mprivate_dns_hostname_type_on_launch[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                           = {
          [32m+[0m [0m"Name" = "krny-spi-pub-1b"
          [32m+[0m [0m"Type" = "Public"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "krny-spi-pub-1b"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
          [32m+[0m [0m"Type"        = "Public"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                                         = (known after apply)
    }

[1m  # aws_vpc.vpc[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m [0m[1m[0marn[0m[0m                                  = (known after apply)
      [32m+[0m [0m[1m[0massign_generated_ipv6_cidr_block[0m[0m     = false
      [32m+[0m [0m[1m[0mcidr_block[0m[0m                           = "10.0.0.0/16"
      [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_route_table_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mdhcp_options_id[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0menable_classiclink_dns_support[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0menable_dns_hostnames[0m[0m                 = true
      [32m+[0m [0m[1m[0menable_dns_support[0m[0m                   = true
      [32m+[0m [0m[1m[0menable_network_address_usage_metrics[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                                   = (known after apply)
      [32m+[0m [0m[1m[0minstance_tenancy[0m[0m                     = "default"
      [32m+[0m [0m[1m[0mipv6_association_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_block_network_border_group[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mmain_route_table_id[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mowner_id[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                                 = {
          [32m+[0m [0m"Name" = "sensing-solution"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                             = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "sensing-solution"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[0m[1mPlan:[0m 22 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mdatabase_subnet_arns[0m[0m      = []
  [32m+[0m [0m[1m[0mdatabase_subnets[0m[0m          = []
  [32m+[0m [0m[1m[0mdefault_network_acl_id[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0mprivate_subnet_arns[0m[0m       = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
  [32m+[0m [0m[1m[0mprivate_subnets[0m[0m           = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
  [32m+[0m [0m[1m[0mpublic_subnet_arns[0m[0m        = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
  [32m+[0m [0m[1m[0mpublic_subnets[0m[0m            = [
      [32m+[0m [0m(known after apply),
      [32m+[0m [0m(known after apply),
    ]
  [32m+[0m [0m[1m[0mvpc_arn[0m[0m                   = (known after apply)
  [32m+[0m [0m[1m[0mvpc_id[0m[0m                    = (known after apply)
  [32m+[0m [0m[1m[0mvpc_private_route_table[0m[0m   = [
      [32m+[0m [0m(known after apply),
    ]
  [32m+[0m [0m[1m[0mvpc_public_route_table[0m[0m    = [
      [32m+[0m [0m(known after apply),
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_layer_version.this[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_layer_version" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mcompatible_runtimes[0m[0m         = [
          [32m+[0m [0m"python3.9",
        ]
      [32m+[0m [0m[1m[0mcreated_date[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mfilename[0m[0m                    = "s3fs.zip"
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mlayer_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mlayer_name[0m[0m                  = "s3fs"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                     = (known after apply)
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=a78d823f96440893244c1191d84b2e3ed8431e934a6d7ebbaae25e1cc3cc13e8][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=727a22d32bd8ab8e1053ecfb2f30442e1479457c8880957737ae64659aa9b5d5][0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=09e44facc8ace5e81c7ad30dd83911378ecd421be7d578254b5d24d8919a1c7e][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=7a8d9d65b28dfa6538502e7c4eb3c0824e76c697a23c8bdd03ff7f4c73a25d49][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=ca4e16984252199792b27e043095fe7470514da3180b9157cc5ac099141fba39][0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=fef3a67b5334383466ae660d3d6c3a5244198807c1685c43563562df62175918][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=5197869e792b7c1a7e6270a79411ea27c22260ccb0a30a6c8cb86b09c68eaaaf][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=14e919bc610be3012f30b76643e1bfadece8afd3f910dbcd6011c2c9fc1143e9][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_layer_version.this[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_layer_version" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mcompatible_runtimes[0m[0m         = [
          [32m+[0m [0m"python3.9",
        ]
      [32m+[0m [0m[1m[0mcreated_date[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mfilename[0m[0m                    = "yahoo_fin_package.zip"
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mlayer_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mlayer_name[0m[0m                  = "yahoo-fin-package"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                     = (known after apply)
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "yahoofin-func-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/yahoo_finance/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                          [32m+[0m [0m"glue:StartJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-yahoofin"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:BatchGet*",
                          [32m+[0m [0m"dynamodb:DescribeStream",
                          [32m+[0m [0m"dynamodb:DescribeTable",
                          [32m+[0m [0m"dynamodb:Get*",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                          [32m+[0m [0m"dynamodb:BatchWrite*",
                          [32m+[0m [0m"dynamodb:Delete*",
                          [32m+[0m [0m"dynamodb:Update*",
                          [32m+[0m [0m"dynamodb:PutItem",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:dynamodb:us-east-1:396112814485:table/krny-yahoo-securities"
                      [32m+[0m [0mSid      = "SpecificTable"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"secretsmanager:GetSecretValue",
                          [32m+[0m [0m"secretsmanager:DescribeSecret",
                          [32m+[0m [0m"secretsmanager:ListSecrets",
                          [32m+[0m [0m"kms:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "yahoofin-func-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "yahoofin-func-role"
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "yahoofin-func-role"
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "yahoofin-func-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "yahoofin-func-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "client-data-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/yahoo_finance/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                          [32m+[0m [0m"glue:StartJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-yahoofin"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:BatchGet*",
                          [32m+[0m [0m"dynamodb:DescribeStream",
                          [32m+[0m [0m"dynamodb:DescribeTable",
                          [32m+[0m [0m"dynamodb:Get*",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                          [32m+[0m [0m"dynamodb:BatchWrite*",
                          [32m+[0m [0m"dynamodb:Delete*",
                          [32m+[0m [0m"dynamodb:Update*",
                          [32m+[0m [0m"dynamodb:PutItem",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:dynamodb:us-east-1:396112814485:table/yahoofin"
                      [32m+[0m [0mSid      = "SpecificTable"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"secretsmanager:GetSecretValue",
                          [32m+[0m [0m"secretsmanager:DescribeSecret",
                          [32m+[0m [0m"secretsmanager:ListSecrets",
                          [32m+[0m [0m"kms:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "client-data-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "client-data-role"
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "client-data-role"
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "client-data-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "client-data-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=cb4b9f3736ecd948159562baeae7e83911dc2ff64886cfc193fa2e6108823503][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
 [36m<=[0m read (data resources)
[0m
Terraform will perform the following actions:

[1m  # data.aws_iam_policy_document.bucket_policy[0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "bucket_policy" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m = (known after apply)

      [32m+[0m [0mstatement {
          [32m+[0m [0m[1m[0mactions[0m[0m   = [
              [32m+[0m [0m"s3:*",
            ]
          [32m+[0m [0m[1m[0mresources[0m[0m = [
              [32m+[0m [0m"arn:aws:s3:::krny-spi-lakeformation-uat",
            ]

          [32m+[0m [0mprincipals {
              [32m+[0m [0m[1m[0midentifiers[0m[0m = [
                  [32m+[0m [0m(known after apply),
                ]
              [32m+[0m [0m[1m[0mtype[0m[0m        = "AWS"
            }
        }
    }

[1m  # aws_iam_role.s3-role[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "s3-role" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "ec2.amazonaws.com"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # module.s3_bucket.data.aws_iam_policy_document.combined[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "combined" {
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0msource_policy_documents[0m[0m = (known after apply)
    }

[1m  # module.s3_bucket.data.aws_iam_policy_document.deny_insecure_transport[0][0m will be read during apply[0m
  # (config refers to values not yet known)[0m
[0m [36m<=[0m[0m data "aws_iam_policy_document" "deny_insecure_transport" {
      [32m+[0m [0m[1m[0mid[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mjson[0m[0m = (known after apply)

      [32m+[0m [0mstatement {
          [32m+[0m [0m[1m[0mactions[0m[0m   = [
              [32m+[0m [0m"s3:*",
            ]
          [32m+[0m [0m[1m[0meffect[0m[0m    = "Deny"
          [32m+[0m [0m[1m[0mresources[0m[0m = [
              [32m+[0m [0m(known after apply),
              [32m+[0m [0m(known after apply),
            ]
          [32m+[0m [0m[1m[0msid[0m[0m       = "denyInsecureTransport"

          [32m+[0m [0mcondition {
              [32m+[0m [0m[1m[0mtest[0m[0m     = "Bool"
              [32m+[0m [0m[1m[0mvalues[0m[0m   = [
                  [32m+[0m [0m"false",
                ]
              [32m+[0m [0m[1m[0mvariable[0m[0m = "aws:SecureTransport"
            }

          [32m+[0m [0mprincipals {
              [32m+[0m [0m[1m[0midentifiers[0m[0m = [
                  [32m+[0m [0m"*",
                ]
              [32m+[0m [0m[1m[0mtype[0m[0m        = "*"
            }
        }
    }

[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[1m  # module.s3_bucket.aws_s3_bucket.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m [0m[1m[0macceleration_status[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0macl[0m[0m                         = "private"
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mbucket[0m[0m                      = "krny-spi-lakeformation-uat"
      [32m+[0m [0m[1m[0mbucket_domain_name[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mbucket_prefix[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mbucket_regional_domain_name[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m               = true
      [32m+[0m [0m[1m[0mhosted_zone_id[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mregion[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mrequest_payer[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m                        = {
          [32m+[0m [0m"EnvironmentClass" = "dev"
          [32m+[0m [0m"ManagedBy"        = "terraform"
          [32m+[0m [0m"Name"             = "krny-spi-lakeformation-uat"
          [32m+[0m [0m"Owner"            = "Xebia"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m                    = {
          [32m+[0m [0m"EnvironmentClass" = "dev"
          [32m+[0m [0m"ManagedBy"        = "terraform"
          [32m+[0m [0m"Name"             = "krny-spi-lakeformation-uat"
          [32m+[0m [0m"Owner"            = "Xebia"
        }
      [32m+[0m [0m[1m[0mwebsite_domain[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mwebsite_endpoint[0m[0m            = (known after apply)

      [32m+[0m [0mcors_rule {
          [32m+[0m [0m[1m[0mallowed_headers[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_methods[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mallowed_origins[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mexpose_headers[0m[0m  = (known after apply)
          [32m+[0m [0m[1m[0mmax_age_seconds[0m[0m = (known after apply)
        }

      [32m+[0m [0mgrant {
          [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtype[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0muri[0m[0m         = (known after apply)
        }

      [32m+[0m [0mlifecycle_rule {
          [32m+[0m [0m[1m[0menabled[0m[0m = false
          [32m+[0m [0m[1m[0mid[0m[0m      = "current_transition"
          [32m+[0m [0m[1m[0mtags[0m[0m    = {
              [32m+[0m [0m"autoclean" = "true"
              [32m+[0m [0m"rule"      = "log"
            }

          [32m+[0m [0mexpiration {
              [32m+[0m [0m[1m[0mdays[0m[0m = 90
            }

          [32m+[0m [0mtransition {
              [32m+[0m [0m[1m[0mdays[0m[0m          = 30
              [32m+[0m [0m[1m[0mstorage_class[0m[0m = "GLACIER"
            }
        }

      [32m+[0m [0mlogging {
          [32m+[0m [0m[1m[0mtarget_bucket[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mtarget_prefix[0m[0m = (known after apply)
        }

      [32m+[0m [0mobject_lock_configuration {
          [32m+[0m [0m[1m[0mobject_lock_enabled[0m[0m = (known after apply)

          [32m+[0m [0mrule {
              [32m+[0m [0mdefault_retention {
                  [32m+[0m [0m[1m[0mdays[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0mmode[0m[0m  = (known after apply)
                  [32m+[0m [0m[1m[0myears[0m[0m = (known after apply)
                }
            }
        }

      [32m+[0m [0mreplication_configuration {
          [32m+[0m [0m[1m[0mrole[0m[0m = (known after apply)

          [32m+[0m [0mrules {
              [32m+[0m [0m[1m[0mdelete_marker_replication_status[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mid[0m[0m                               = (known after apply)
              [32m+[0m [0m[1m[0mprefix[0m[0m                           = (known after apply)
              [32m+[0m [0m[1m[0mpriority[0m[0m                         = (known after apply)
              [32m+[0m [0m[1m[0mstatus[0m[0m                           = (known after apply)

              [32m+[0m [0mdestination {
                  [32m+[0m [0m[1m[0maccount_id[0m[0m         = (known after apply)
                  [32m+[0m [0m[1m[0mbucket[0m[0m             = (known after apply)
                  [32m+[0m [0m[1m[0mreplica_kms_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mstorage_class[0m[0m      = (known after apply)

                  [32m+[0m [0maccess_control_translation {
                      [32m+[0m [0m[1m[0mowner[0m[0m = (known after apply)
                    }

                  [32m+[0m [0mmetrics {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }

                  [32m+[0m [0mreplication_time {
                      [32m+[0m [0m[1m[0mminutes[0m[0m = (known after apply)
                      [32m+[0m [0m[1m[0mstatus[0m[0m  = (known after apply)
                    }
                }

              [32m+[0m [0mfilter {
                  [32m+[0m [0m[1m[0mprefix[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0mtags[0m[0m   = (known after apply)
                }

              [32m+[0m [0msource_selection_criteria {
                  [32m+[0m [0msse_kms_encrypted_objects {
                      [32m+[0m [0m[1m[0menabled[0m[0m = (known after apply)
                    }
                }
            }
        }

      [32m+[0m [0mserver_side_encryption_configuration {
          [32m+[0m [0mrule {
              [32m+[0m [0m[1m[0mbucket_key_enabled[0m[0m = (known after apply)

              [32m+[0m [0mapply_server_side_encryption_by_default {
                  [32m+[0m [0m[1m[0mkms_master_key_id[0m[0m = (known after apply)
                  [32m+[0m [0m[1m[0msse_algorithm[0m[0m     = (known after apply)
                }
            }
        }

      [32m+[0m [0mversioning {
          [32m+[0m [0m[1m[0menabled[0m[0m    = true
          [32m+[0m [0m[1m[0mmfa_delete[0m[0m = false
        }

      [32m+[0m [0mwebsite {
          [32m+[0m [0m[1m[0merror_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mindex_document[0m[0m           = (known after apply)
          [32m+[0m [0m[1m[0mredirect_all_requests_to[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mrouting_rules[0m[0m            = (known after apply)
        }
    }

[1m  # module.s3_bucket.aws_s3_bucket_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "this" {
      [32m+[0m [0m[1m[0mbucket[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
    }

[1m  # module.s3_bucket.aws_s3_bucket_public_access_block.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "this" {
      [32m+[0m [0m[1m[0mblock_public_acls[0m[0m       = true
      [32m+[0m [0m[1m[0mblock_public_policy[0m[0m     = true
      [32m+[0m [0m[1m[0mbucket[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mignore_public_acls[0m[0m      = true
      [32m+[0m [0m[1m[0mrestrict_public_buckets[0m[0m = true
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0ms3_bucket_arn[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0ms3_bucket_id[0m[0m  = (known after apply)
[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0m  with module.s3_bucket.aws_s3_bucket.this[0],
[33mâ”‚[0m [0m  on modules\terraform-aws-s3-bucket-2.14.1\main.tf line 5, in resource "aws_s3_bucket" "this":
[33mâ”‚[0m [0m   5: resource "aws_s3_bucket" "this" [4m{[0m[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0mUse the aws_s3_bucket_versioning resource instead
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m(and 2 more similar warnings elsewhere)
[33mâ•µ[0m[0m
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "ihs-glue-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:*",
                          [32m+[0m [0m"s3:Get*",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"ec2:DescribeVpcEndpoints",
                          [32m+[0m [0m"ec2:DescribeRouteTables",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeVpcAttribute",
                          [32m+[0m [0m"iam:ListRolePolicies",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"cloudwatch:PutMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:CreateBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:ListObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/reference-data/transformation/variable-treatment/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/cleaned-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/transformed-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/temp-dir/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-packages/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-shell-scripts/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::crawler-public*",
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:/aws-glue/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0m"ForAllValues:StringEquals" = {
                              [32m+[0m [0m"aws:TagKeys" = [
                                  [32m+[0m [0m"aws-glue-service-resource",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:ec2:*:*:network-interface/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:security-group/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:instance/*",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "glue.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "ihs-glue-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "ihs-glue-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "ihs-glue-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "ihs-glue-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "ihs-func-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/ihs/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                          [32m+[0m [0m"glue:StartJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-ihs"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "ihs-func-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "ihs-func-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "ihs-func-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "ihs-func-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 1s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "glue-ingestion-job-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:*",
                          [32m+[0m [0m"s3:Get*",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"ec2:DescribeVpcEndpoints",
                          [32m+[0m [0m"ec2:DescribeRouteTables",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeVpcAttribute",
                          [32m+[0m [0m"iam:ListRolePolicies",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"cloudwatch:PutMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:CreateBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:ListObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/reference-data/transformation/variable-treatment/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/cleaned-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/transformed-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/temp-dir/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-packages/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-shell-scripts/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/meteostat/data/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::crawler-public*",
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:/aws-glue/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0m"ForAllValues:StringEquals" = {
                              [32m+[0m [0m"aws:TagKeys" = [
                                  [32m+[0m [0m"aws-glue-service-resource",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:ec2:*:*:network-interface/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:security-group/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:instance/*",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "glue.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "glue-ingestion-job-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "glue-ingestion-job-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "glue-ingestion-job-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "glue-ingestion-job-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=55341624965cab96a83e2dc75abd8aa944479d0b6f2752d9b380e60611287da3][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m
[0m[1mdata.aws_partition.current: Read complete after 1s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 1s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "moodys_manual_policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/moodys_188/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                          [32m+[0m [0m"glue:StartJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-moodys-188"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "moodys_manual_role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/CloudWatchFullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "moodys_manual_role"
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "moodys_manual_role"
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "moodys_manual_policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "moodys_manual_role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "AWSLakeFormationDataAdmin-custom-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = "*"
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ram:CreateResourceShare",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mStringLikeIfExists = {
                              [32m+[0m [0m"ram:RequestedResourceType" = [
                                  [32m+[0m [0m"glue:Table",
                                  [32m+[0m [0m"glue:Database",
                                  [32m+[0m [0m"glue:Catalog",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ram:UpdateResourceShare",
                          [32m+[0m [0m"ram:DeleteResourceShare",
                          [32m+[0m [0m"ram:AssociateResourceShare",
                          [32m+[0m [0m"ram:DisassociateResourceShare",
                          [32m+[0m [0m"ram:GetResourceShares",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0mStringLike = {
                              [32m+[0m [0m"ram:ResourceShareName" = [
                                  [32m+[0m [0m"LakeFormation*",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:PutResourcePolicy",
                          [32m+[0m [0m"glue:DeleteResourcePolicy",
                          [32m+[0m [0m"organizations:DescribeOrganization",
                          [32m+[0m [0m"organizations:DescribeAccount",
                          [32m+[0m [0m"ram:Get*",
                          [32m+[0m [0m"ram:List*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"organizations:ListRoots",
                          [32m+[0m [0m"organizations:ListAccountsForParent",
                          [32m+[0m [0m"organizations:ListOrganizationalUnitsForParent",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"lakeformation:*",
                          [32m+[0m [0m"cloudtrail:DescribeTrails",
                          [32m+[0m [0m"cloudtrail:LookupEvents",
                          [32m+[0m [0m"glue:GetDatabase",
                          [32m+[0m [0m"glue:GetDatabases",
                          [32m+[0m [0m"glue:CreateDatabase",
                          [32m+[0m [0m"glue:UpdateDatabase",
                          [32m+[0m [0m"glue:DeleteDatabase",
                          [32m+[0m [0m"glue:GetConnections",
                          [32m+[0m [0m"glue:SearchTables",
                          [32m+[0m [0m"glue:GetTable",
                          [32m+[0m [0m"glue:CreateTable",
                          [32m+[0m [0m"glue:UpdateTable",
                          [32m+[0m [0m"glue:DeleteTable",
                          [32m+[0m [0m"glue:GetTableVersions",
                          [32m+[0m [0m"glue:GetPartitions",
                          [32m+[0m [0m"glue:GetTables",
                          [32m+[0m [0m"glue:GetWorkflow",
                          [32m+[0m [0m"glue:ListWorkflows",
                          [32m+[0m [0m"glue:BatchGetWorkflows",
                          [32m+[0m [0m"glue:DeleteWorkflow",
                          [32m+[0m [0m"glue:GetWorkflowRuns",
                          [32m+[0m [0m"glue:StartWorkflowRun",
                          [32m+[0m [0m"glue:GetWorkflow",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:GetBucketLocation",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"iam:ListUsers",
                          [32m+[0m [0m"iam:ListRoles",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"airflow:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mAWS = "arn:aws:iam::396112814485:root"
                        }
                      [32m+[0m [0mSid       = ""
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "lakeformation-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "lakeformation-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "AWSLakeFormationDataAdmin-custom-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "lakeformation-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=08c9eda2e9696c939ef3fb90732f59614677e74eba4f3d8ac86773359d15d12e][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "covid-func-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/covid/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                          [32m+[0m [0m"glue:StartJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-covid"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "lambda.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "covid-func-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "covid-func-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "covid-func-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "covid-func-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_layer_version.this[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_layer_version" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mcompatible_runtimes[0m[0m         = [
          [32m+[0m [0m"nodejs18.x",
        ]
      [32m+[0m [0m[1m[0mcreated_date[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mfilename[0m[0m                    = "node18layer1ver06042023.zip"
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mlayer_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mlayer_name[0m[0m                  = "node18"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                     = (known after apply)
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=0caf395cd260f9e7bac272dbebb61f79a87cee35b553b3fcf6cad3ebcdc96551][0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=cc85e0284545c5adcd59807c817d8276d122cb3c120e8003181e3853c7fe255b][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=fef3a67b5334383466ae660d3d6c3a5244198807c1685c43563562df62175918][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "similarweb-func-client-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/similar_web/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                          [32m+[0m [0m"glue:StartJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-similarweb"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "similarweb-func-client-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "similarweb-func-client-role"
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "similarweb-func-client-role"
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "similarweb-func-client-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "similarweb-func-client-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "google-c-func-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "LambdaBasicExecution"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/google_trends1/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:BatchGet*",
                          [32m+[0m [0m"dynamodb:DescribeTable",
                          [32m+[0m [0m"dynamodb:Get*",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                          [32m+[0m [0m"dynamodb:BatchWrite*",
                          [32m+[0m [0m"dynamodb:CreateTable",
                          [32m+[0m [0m"dynamodb:Delete*",
                          [32m+[0m [0m"dynamodb:Update*",
                          [32m+[0m [0m"dynamodb:PutItem",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/googletrends",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:StartJobRun",
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-google"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"secretsmanager:GetSecretValue",
                          [32m+[0m [0m"secretsmanager:DescribeSecret",
                          [32m+[0m [0m"secretsmanager:ListSecrets",
                          [32m+[0m [0m"kms:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "google-c-func-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "google-c-func-role"
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "google-c-func-role"
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "google-c-func-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "google-c-func-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_catalog_database.main[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_database" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m  = "Glue aws-athena Catalog database"
      [32m+[0m [0m[1m[0mid[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mlocation_uri[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m         = "aws_athena"
      [32m+[0m [0m[1m[0mtags_all[0m[0m     = (known after apply)

      [32m+[0m [0mcreate_table_default_permission {
          [32m+[0m [0m[1m[0mpermissions[0m[0m = (known after apply)

          [32m+[0m [0mprincipal {
              [32m+[0m [0m[1m[0mdata_lake_principal_identifier[0m[0m = (known after apply)
            }
        }
    }

[1m  # aws_glue_catalog_table.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_covid"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/covid"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_ihs_historical"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/ihs/data/ihs-historical"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[2][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_ihs_pp"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/ihs/data/ihs-pp"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[3][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_google_trends"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/google_trends"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[4][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_fred"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/fred"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[5][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_meteostat"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/meteostat"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[6][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_similar_web"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/similar_web"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[7][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_moodys"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/moodys_all/data"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[8][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_moodys_188"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/moodys_188/data"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[9][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_yahoo_finance"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/yahoo_finance"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[10][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "tfdata_mnemonics"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/transformed-data/mnemonics"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[11][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_covid"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/covid"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[12][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_ihs_historical"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/ihs/data/ihs-historical"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[13][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_ihs_pp"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/ihs/data/ihs-pp"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[14][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_google_trends"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/google_trends"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[15][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_fred"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/fred"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[16][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_meteostat"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/meteostat"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[17][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_similar_web"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/similar_web"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[18][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_moodys"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/moodys_all/data"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[19][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_moodys_188"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/moodys_188/data"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[1m  # aws_glue_catalog_table.main[20][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_catalog_table" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mcatalog_id[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cldata_yahoo_finance"
      [32m+[0m [0m[1m[0mtable_type[0m[0m    = "EXTERNAL_TABLE"

      [32m+[0m [0mpartition_index {
          [32m+[0m [0m[1m[0mindex_name[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mindex_status[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mkeys[0m[0m         = (known after apply)
        }

      [32m+[0m [0mstorage_descriptor {
          [32m+[0m [0m[1m[0minput_format[0m[0m  = "org.apache.hadoop.mapred.TextInputFormat"
          [32m+[0m [0m[1m[0mlocation[0m[0m      = "s3://krny-spi-ext-sources-uat/cleaned-data/yahoo_finance"
          [32m+[0m [0m[1m[0moutput_format[0m[0m = "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"

          [32m+[0m [0mcolumns {
              [32m+[0m [0m[1m[0mcomment[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m       = (known after apply)
              [32m+[0m [0m[1m[0mparameters[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m       = (known after apply)
            }

          [32m+[0m [0mser_de_info {
              [32m+[0m [0m[1m[0mparameters[0m[0m            = {
                  [32m+[0m [0m"field.delim"          = ","
                  [32m+[0m [0m"serialization.format" = "1"
                }
              [32m+[0m [0m[1m[0mserialization_library[0m[0m = "org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe"
            }
        }
    }

[0m[1mPlan:[0m 22 to add, 0 to change, 0 to destroy.
[0m[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "meteostat-glue-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:*",
                          [32m+[0m [0m"s3:Get*",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"ec2:DescribeVpcEndpoints",
                          [32m+[0m [0m"ec2:DescribeRouteTables",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeVpcAttribute",
                          [32m+[0m [0m"iam:ListRolePolicies",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"cloudwatch:PutMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:CreateBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:DeleteObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/reference-data/transformation/variable-treatment/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/cleaned-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/transformed-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/temp-dir/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-packages/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-shell-scripts/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::crawler-public*",
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:/aws-glue/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0m"ForAllValues:StringEquals" = {
                              [32m+[0m [0m"aws:TagKeys" = [
                                  [32m+[0m [0m"aws-glue-service-resource",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:ec2:*:*:network-interface/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:security-group/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:instance/*",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "glue.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "meteostat-glue-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "meteostat-glue-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "meteostat-glue-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "meteostat-glue-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=5d7cb20290f532b2f58ad447793b9c0478278cb1bb182d2fb5e98a8ffb1bda7a][0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=86c3bbab7ca76b686ebb591cd21e473e816f993aaf9eb142b77e809ada931fd9][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "google-p-func-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                      [32m+[0m [0mSid      = "LambdaBasicExecution"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"lambda:InvokeFunction",
                          [32m+[0m [0m"lambda:InvokeAsync",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:lambda:us-east-1:396112814485:function:ingestion-googletrends-child"
                      [32m+[0m [0mSid      = "VisualEditor0"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:StartJobRun",
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-google"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"secretsmanager:GetSecretValue",
                          [32m+[0m [0m"secretsmanager:DescribeSecret",
                          [32m+[0m [0m"secretsmanager:ListSecrets",
                          [32m+[0m [0m"kms:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:BatchGet*",
                          [32m+[0m [0m"dynamodb:DescribeTable",
                          [32m+[0m [0m"dynamodb:Get*",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                          [32m+[0m [0m"dynamodb:BatchWrite*",
                          [32m+[0m [0m"dynamodb:CreateTable",
                          [32m+[0m [0m"dynamodb:Delete*",
                          [32m+[0m [0m"dynamodb:Update*",
                          [32m+[0m [0m"dynamodb:PutItem",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-google-trends",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "google-p-func-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "google-p-func-role"
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "google-p-func-role"
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "google-p-func-role"
    }

[0m[1mPlan:[0m 5 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "google-p-func-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "google-p-func-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 1s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "yahoofin-glue-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:*",
                          [32m+[0m [0m"kms:*",
                          [32m+[0m [0m"s3:Get*",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"ec2:DescribeVpcEndpoints",
                          [32m+[0m [0m"ec2:DescribeRouteTables",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeVpcAttribute",
                          [32m+[0m [0m"iam:ListRolePolicies",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"cloudwatch:PutMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:CreateBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:ListObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/reference-data/transformation/variable-treatment/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/cleaned-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/transformed-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/temp-dir/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-packages/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-shell-scripts/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::crawler-public*",
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:/aws-glue/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0m"ForAllValues:StringEquals" = {
                              [32m+[0m [0m"aws:TagKeys" = [
                                  [32m+[0m [0m"aws-glue-service-resource",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:ec2:*:*:network-interface/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:security-group/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:instance/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:GetItem",
                          [32m+[0m [0m"dynamodb:BatchGetItem",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-yahoo-securities",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "glue.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "yahoofin-glue-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "yahoofin-glue-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "yahoofin-glue-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "yahoofin-glue-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=fef3a67b5334383466ae660d3d6c3a5244198807c1685c43563562df62175918][0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=b57ac27c8f7b459818a832a657e7e49c41ebd710f6e59656e835f7c127a7ec99][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "s3_dynamodb_policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                          [32m+[0m [0m"s3:ListObjects",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::396112814485-codebase/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:BatchGet*",
                          [32m+[0m [0m"dynamodb:DescribeTable",
                          [32m+[0m [0m"dynamodb:Get*",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                          [32m+[0m [0m"dynamodb:BatchWrite*",
                          [32m+[0m [0m"dynamodb:CreateTable",
                          [32m+[0m [0m"dynamodb:Delete*",
                          [32m+[0m [0m"dynamodb:Update*",
                          [32m+[0m [0m"dynamodb:PutItem",
                          [32m+[0m [0m"dynamodb:GetObject",
                          [32m+[0m [0m"dynamodb:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-fred",
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-google-trends",
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-moodys",
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-yahoo-securities",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"secretsmanager:GetSecretValue",
                          [32m+[0m [0m"secretsmanager:DescribeSecret",
                          [32m+[0m [0m"secretsmanager:ListSecrets",
                          [32m+[0m [0m"kms:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "s3_dynamodb_role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "s3_dynamodb_role"
    }

[1m  # aws_iam_role_policy_attachment.existing_policy_attachment[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "existing_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      [32m+[0m [0m[1m[0mrole[0m[0m       = "s3_dynamodb_role"
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "s3_dynamodb_role"
    }

[0m[1mPlan:[0m 5 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "s3_dynamodb_policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "s3_dynamodb_role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_layer_version.this[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_layer_version" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mcompatible_runtimes[0m[0m         = [
          [32m+[0m [0m"python3.7",
        ]
      [32m+[0m [0m[1m[0mcreated_date[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mfilename[0m[0m                    = "pytrends.zip"
      [32m+[0m [0m[1m[0mid[0m[0m                          = (known after apply)
      [32m+[0m [0m[1m[0mlayer_arn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mlayer_name[0m[0m                  = "pytrends"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mversion[0m[0m                     = (known after apply)
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mid[0m[0m = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "moodys-func-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeInstances",
                          [32m+[0m [0m"ec2:AttachNetworkInterface",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:GetObjectVersion",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:DeleteObjectVersion",
                          [32m+[0m [0m"s3:ListBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/moodys_all/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:GetJob",
                          [32m+[0m [0m"glue:GetJobRun",
                          [32m+[0m [0m"glue:StartJobRun",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "arn:aws:glue:us-east-1:396112814485:job/transformation-moodys"
                      [32m+[0m [0mSid      = "GlueJobPolicy"
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:BatchGet*",
                          [32m+[0m [0m"dynamodb:DescribeTable",
                          [32m+[0m [0m"dynamodb:Get*",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                          [32m+[0m [0m"dynamodb:BatchWrite*",
                          [32m+[0m [0m"dynamodb:CreateTable",
                          [32m+[0m [0m"dynamodb:Delete*",
                          [32m+[0m [0m"dynamodb:Update*",
                          [32m+[0m [0m"dynamodb:PutItem",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-moodys",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"secretsmanager:GetSecretValue",
                          [32m+[0m [0m"secretsmanager:DescribeSecret",
                          [32m+[0m [0m"secretsmanager:ListSecrets",
                          [32m+[0m [0m"kms:*",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = "*"
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"sts:AssumeRole",
                        ]
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = [
                              [32m+[0m [0m"lambda.amazonaws.com",
                            ]
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "moodys-func-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "moodys-func-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "moodys-func-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "moodys-func-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "covid-glue-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:*",
                          [32m+[0m [0m"s3:Get*",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"ec2:DescribeVpcEndpoints",
                          [32m+[0m [0m"ec2:DescribeRouteTables",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeVpcAttribute",
                          [32m+[0m [0m"iam:ListRolePolicies",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"cloudwatch:PutMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:CreateBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:ListObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/reference-data/transformation/variable-treatment/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/cleaned-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/transformed-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/temp-dir/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-packages/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-shell-scripts/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::crawler-public*",
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:/aws-glue/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0m"ForAllValues:StringEquals" = {
                              [32m+[0m [0m"aws:TagKeys" = [
                                  [32m+[0m [0m"aws-glue-service-resource",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:ec2:*:*:network-interface/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:security-group/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:instance/*",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "glue.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "covid-glue-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "covid-glue-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "covid-glue-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "covid-glue-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.template_file.role_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Reading...[0m[0m
[0m[1mdata.template_file.policy_document[0]: Read complete after 0s [id=400af8aa208c637182acf796b485b3ffc44d961e2ca4883a62b687e04e85ec82][0m
[0m[1mdata.template_file.role_document[0]: Read complete after 0s [id=fef3a67b5334383466ae660d3d6c3a5244198807c1685c43563562df62175918][0m
[0m[1mdata.aws_partition.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_policy.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m        = "fred-glue-policy"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m        = "/"
      [32m+[0m [0m[1m[0mpolicy[0m[0m      = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"glue:*",
                          [32m+[0m [0m"kms:*",
                          [32m+[0m [0m"s3:Get*",
                          [32m+[0m [0m"s3:ListBucket",
                          [32m+[0m [0m"s3:ListAllMyBuckets",
                          [32m+[0m [0m"s3:GetBucketAcl",
                          [32m+[0m [0m"ec2:DescribeVpcEndpoints",
                          [32m+[0m [0m"ec2:DescribeRouteTables",
                          [32m+[0m [0m"ec2:CreateNetworkInterface",
                          [32m+[0m [0m"ec2:DeleteNetworkInterface",
                          [32m+[0m [0m"ec2:DescribeNetworkInterfaces",
                          [32m+[0m [0m"ec2:DescribeSecurityGroups",
                          [32m+[0m [0m"ec2:DescribeSubnets",
                          [32m+[0m [0m"ec2:DescribeVpcAttribute",
                          [32m+[0m [0m"iam:ListRolePolicies",
                          [32m+[0m [0m"iam:GetRole",
                          [32m+[0m [0m"iam:GetRolePolicy",
                          [32m+[0m [0m"cloudwatch:PutMetricData",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:CreateBucket",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                          [32m+[0m [0m"s3:PutObject",
                          [32m+[0m [0m"s3:DeleteObject",
                          [32m+[0m [0m"s3:ListObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/reference-data/transformation/variable-treatment/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/cleaned-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/transformed-data/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/temp-dir/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-packages/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-codebase-uat/glue/python-shell-scripts/*",
                          [32m+[0m [0m"arn:aws:s3:::krny-spi-ext-sources-uat/raw-data/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"s3:GetObject",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:s3:::crawler-public*",
                          [32m+[0m [0m"arn:aws:s3:::aws-glue-*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"logs:CreateLogGroup",
                          [32m+[0m [0m"logs:CreateLogStream",
                          [32m+[0m [0m"logs:PutLogEvents",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:logs:*:*:/aws-glue/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = [
                          [32m+[0m [0m"ec2:CreateTags",
                          [32m+[0m [0m"ec2:DeleteTags",
                        ]
                      [32m+[0m [0mCondition = {
                          [32m+[0m [0m"ForAllValues:StringEquals" = {
                              [32m+[0m [0m"aws:TagKeys" = [
                                  [32m+[0m [0m"aws-glue-service-resource",
                                ]
                            }
                        }
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mResource  = [
                          [32m+[0m [0m"arn:aws:ec2:*:*:network-interface/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:security-group/*",
                          [32m+[0m [0m"arn:aws:ec2:*:*:instance/*",
                        ]
                    },
                  [32m+[0m [0m{
                      [32m+[0m [0mAction   = [
                          [32m+[0m [0m"dynamodb:GetItem",
                          [32m+[0m [0m"dynamodb:BatchGetItem",
                          [32m+[0m [0m"dynamodb:Query",
                          [32m+[0m [0m"dynamodb:Scan",
                        ]
                      [32m+[0m [0mEffect   = "Allow"
                      [32m+[0m [0mResource = [
                          [32m+[0m [0m"arn:aws:dynamodb:us-east-1:396112814485:table/krny-fred",
                        ]
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mpolicy_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m    = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_iam_role.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0massume_role_policy[0m[0m    = jsonencode(
            {
              [32m+[0m [0mStatement = [
                  [32m+[0m [0m{
                      [32m+[0m [0mAction    = "sts:AssumeRole"
                      [32m+[0m [0mEffect    = "Allow"
                      [32m+[0m [0mPrincipal = {
                          [32m+[0m [0mService = "glue.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m [0mVersion   = "2012-10-17"
            }
        )
      [32m+[0m [0m[1m[0mcreate_date[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_detach_policies[0m[0m = true
      [32m+[0m [0m[1m[0mid[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mmanaged_policy_arns[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mmax_session_duration[0m[0m  = 3600
      [32m+[0m [0m[1m[0mname[0m[0m                  = "fred-glue-role"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mpath[0m[0m                  = "/"
      [32m+[0m [0m[1m[0mrole_last_used[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m              = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m             = (known after apply)

      [32m+[0m [0minline_policy {
          [32m+[0m [0m[1m[0mname[0m[0m   = (known after apply)
          [32m+[0m [0m[1m[0mpolicy[0m[0m = (known after apply)
        }
    }

[1m  # aws_iam_role_policy_attachment.new_policy_attachment[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mrole[0m[0m       = "fred-glue-role"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_policy_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_policy_name[0m[0m = "fred-glue-policy"
  [32m+[0m [0m[1m[0miam_role_arn[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0miam_role_name[0m[0m   = "fred-glue-role"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_dynamodb_table.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_dynamodb_table" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mbilling_mode[0m[0m     = "PAY_PER_REQUEST"
      [32m+[0m [0m[1m[0mhash_key[0m[0m         = "tenant_id"
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m             = "krny-google-trends-client"
      [32m+[0m [0m[1m[0mread_capacity[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mstream_arn[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mstream_enabled[0m[0m   = false
      [32m+[0m [0m[1m[0mstream_label[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mstream_view_type[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "krny-google-trends-client"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "krny-google-trends-client"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mwrite_capacity[0m[0m   = (known after apply)

      [32m+[0m [0mattribute {
          [32m+[0m [0m[1m[0mname[0m[0m = "tenant_id"
          [32m+[0m [0m[1m[0mtype[0m[0m = "S"
        }

      [32m+[0m [0mpoint_in_time_recovery {
          [32m+[0m [0m[1m[0menabled[0m[0m = true
        }

      [32m+[0m [0mserver_side_encryption {
          [32m+[0m [0m[1m[0menabled[0m[0m     = true
          [32m+[0m [0m[1m[0mkms_key_arn[0m[0m = "arn:aws:kms:us-east-1:287882505924:key/0b3213d1-a19b-4425-b7a3-196cf3c58879"
        }

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "10m"
          [32m+[0m [0m[1m[0mdelete[0m[0m = "10m"
          [32m+[0m [0m[1m[0mupdate[0m[0m = "60m"
        }

      [32m+[0m [0mttl {
          [32m+[0m [0m[1m[0menabled[0m[0m = false
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mdynamodb_table_arn[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0mdynamodb_table_id[0m[0m  = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawler"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--folder"                  = "raw-data/similar_web"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--max_capacity"            = "1"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source similarweb"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "transformation-similarweb"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny_trnsf_similarweb.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"transformation-similarweb",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_dynamodb_table.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_dynamodb_table" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mbilling_mode[0m[0m     = "PAY_PER_REQUEST"
      [32m+[0m [0m[1m[0mhash_key[0m[0m         = "mnemonics"
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m             = "krny-moodys"
      [32m+[0m [0m[1m[0mread_capacity[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mstream_arn[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mstream_enabled[0m[0m   = false
      [32m+[0m [0m[1m[0mstream_label[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mstream_view_type[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "krny-moodys"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "krny-moodys"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mwrite_capacity[0m[0m   = (known after apply)

      [32m+[0m [0mattribute {
          [32m+[0m [0m[1m[0mname[0m[0m = "mnemonics"
          [32m+[0m [0m[1m[0mtype[0m[0m = "S"
        }

      [32m+[0m [0mpoint_in_time_recovery {
          [32m+[0m [0m[1m[0menabled[0m[0m = true
        }

      [32m+[0m [0mserver_side_encryption {
          [32m+[0m [0m[1m[0menabled[0m[0m     = true
          [32m+[0m [0m[1m[0mkms_key_arn[0m[0m = "arn:aws:kms:us-east-1:287882505924:key/0b3213d1-a19b-4425-b7a3-196cf3c58879"
        }

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "10m"
          [32m+[0m [0m[1m[0mdelete[0m[0m = "10m"
          [32m+[0m [0m[1m[0mupdate[0m[0m = "60m"
        }

      [32m+[0m [0mttl {
          [32m+[0m [0m[1m[0menabled[0m[0m = false
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mdynamodb_table_arn[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0mdynamodb_table_id[0m[0m  = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_dynamodb_table.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_dynamodb_table" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mbilling_mode[0m[0m     = "PAY_PER_REQUEST"
      [32m+[0m [0m[1m[0mhash_key[0m[0m         = "index"
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m             = "krny-yahoo-securities"
      [32m+[0m [0m[1m[0mread_capacity[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mstream_arn[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mstream_enabled[0m[0m   = false
      [32m+[0m [0m[1m[0mstream_label[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mstream_view_type[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "krny-yahoo-securities"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "krny-yahoo-securities"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mwrite_capacity[0m[0m   = (known after apply)

      [32m+[0m [0mattribute {
          [32m+[0m [0m[1m[0mname[0m[0m = "index"
          [32m+[0m [0m[1m[0mtype[0m[0m = "S"
        }

      [32m+[0m [0mpoint_in_time_recovery {
          [32m+[0m [0m[1m[0menabled[0m[0m = true
        }

      [32m+[0m [0mserver_side_encryption {
          [32m+[0m [0m[1m[0menabled[0m[0m     = true
          [32m+[0m [0m[1m[0mkms_key_arn[0m[0m = "arn:aws:kms:us-east-1:287882505924:key/0b3213d1-a19b-4425-b7a3-196cf3c58879"
        }

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "10m"
          [32m+[0m [0m[1m[0mdelete[0m[0m = "10m"
          [32m+[0m [0m[1m[0mupdate[0m[0m = "60m"
        }

      [32m+[0m [0mttl {
          [32m+[0m [0m[1m[0menabled[0m[0m = false
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mdynamodb_table_arn[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0mdynamodb_table_id[0m[0m  = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_dynamodb_table.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_dynamodb_table" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mbilling_mode[0m[0m     = "PAY_PER_REQUEST"
      [32m+[0m [0m[1m[0mhash_key[0m[0m         = "Category"
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m             = "krny-google-trends"
      [32m+[0m [0m[1m[0mread_capacity[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mstream_arn[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mstream_enabled[0m[0m   = false
      [32m+[0m [0m[1m[0mstream_label[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mstream_view_type[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "krny-google-trends"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "krny-google-trends"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mwrite_capacity[0m[0m   = (known after apply)

      [32m+[0m [0mattribute {
          [32m+[0m [0m[1m[0mname[0m[0m = "Category"
          [32m+[0m [0m[1m[0mtype[0m[0m = "S"
        }

      [32m+[0m [0mpoint_in_time_recovery {
          [32m+[0m [0m[1m[0menabled[0m[0m = true
        }

      [32m+[0m [0mserver_side_encryption {
          [32m+[0m [0m[1m[0menabled[0m[0m     = true
          [32m+[0m [0m[1m[0mkms_key_arn[0m[0m = "arn:aws:kms:us-east-1:287882505924:key/0b3213d1-a19b-4425-b7a3-196cf3c58879"
        }

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "10m"
          [32m+[0m [0m[1m[0mdelete[0m[0m = "10m"
          [32m+[0m [0m[1m[0mupdate[0m[0m = "60m"
        }

      [32m+[0m [0mttl {
          [32m+[0m [0m[1m[0menabled[0m[0m = false
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mdynamodb_table_arn[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0mdynamodb_table_id[0m[0m  = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_dynamodb_table.this[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_dynamodb_table" "this" {
      [32m+[0m [0m[1m[0marn[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mbilling_mode[0m[0m     = "PAY_PER_REQUEST"
      [32m+[0m [0m[1m[0mhash_key[0m[0m         = "index"
      [32m+[0m [0m[1m[0mid[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m             = "krny-fred"
      [32m+[0m [0m[1m[0mread_capacity[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mstream_arn[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mstream_enabled[0m[0m   = false
      [32m+[0m [0m[1m[0mstream_label[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mstream_view_type[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mtags[0m[0m             = {
          [32m+[0m [0m"Name" = "krny-fred"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m         = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Name"        = "krny-fred"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mwrite_capacity[0m[0m   = (known after apply)

      [32m+[0m [0mattribute {
          [32m+[0m [0m[1m[0mname[0m[0m = "index"
          [32m+[0m [0m[1m[0mtype[0m[0m = "S"
        }

      [32m+[0m [0mpoint_in_time_recovery {
          [32m+[0m [0m[1m[0menabled[0m[0m = true
        }

      [32m+[0m [0mserver_side_encryption {
          [32m+[0m [0m[1m[0menabled[0m[0m     = true
          [32m+[0m [0m[1m[0mkms_key_arn[0m[0m = "arn:aws:kms:us-east-1:993809450021:key/37775ea5-609d-4950-84ee-4f04509700ed"
        }

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "10m"
          [32m+[0m [0m[1m[0mdelete[0m[0m = "10m"
          [32m+[0m [0m[1m[0mupdate[0m[0m = "60m"
        }

      [32m+[0m [0mttl {
          [32m+[0m [0m[1m[0menabled[0m[0m = false
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mdynamodb_table_arn[0m[0m = (known after apply)
  [32m+[0m [0m[1m[0mdynamodb_table_id[0m[0m  = (known after apply)
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_availability_zones.az: Reading...[0m[0m
[0m[1mdata.aws_availability_zones.az: Reading...[0m[0m
[0m[1mdata.aws_availability_zones.az: Read complete after 0s [id=us-east-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_secretsmanager_secret.git_secret[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_secretsmanager_secret" "git_secret" {
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mforce_overwrite_replica_secret[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m                     = "arn:aws:kms:us-east-1:287882505924:key/0b3213d1-a19b-4425-b7a3-196cf3c58879"
      [32m+[0m [0m[1m[0mname[0m[0m                           = "krny-sensing-solution-secret-uat"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mrecovery_window_in_days[0m[0m        = 30
      [32m+[0m [0m[1m[0mrotation_enabled[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrotation_lambda_arn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }

      [32m+[0m [0mreplica {
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mlast_accessed_date[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mregion[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mstatus[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mstatus_message[0m[0m     = (known after apply)
        }

      [32m+[0m [0mrotation_rules {
          [32m+[0m [0m[1m[0mautomatically_after_days[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mduration[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0mschedule_expression[0m[0m      = (known after apply)
        }
    }

[1m  # aws_secretsmanager_secret_version.my_secret_version[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_secretsmanager_secret_version" "my_secret_version" {
      [32m+[0m [0m[1m[0marn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msecret_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0msecret_string[0m[0m  = (sensitive value)
      [32m+[0m [0m[1m[0mversion_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mversion_stages[0m[0m = (known after apply)
    }

[0m[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0msecret_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0msecret_name[0m[0m = "krny-sensing-solution-secret-uat"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_availability_zones.az: Read complete after 0s [id=us-east-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_secretsmanager_secret.git_secret[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_secretsmanager_secret" "git_secret" {
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mforce_overwrite_replica_secret[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0mkms_key_id[0m[0m                     = "arn:aws:kms:us-east-1:287882505924:key/0b3213d1-a19b-4425-b7a3-196cf3c58879"
      [32m+[0m [0m[1m[0mname[0m[0m                           = "krny-moodys-secret-uat"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mpolicy[0m[0m                         = (known after apply)
      [32m+[0m [0m[1m[0mrecovery_window_in_days[0m[0m        = 30
      [32m+[0m [0m[1m[0mrotation_enabled[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrotation_lambda_arn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }

      [32m+[0m [0mreplica {
          [32m+[0m [0m[1m[0mkms_key_id[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mlast_accessed_date[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mregion[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mstatus[0m[0m             = (known after apply)
          [32m+[0m [0m[1m[0mstatus_message[0m[0m     = (known after apply)
        }

      [32m+[0m [0mrotation_rules {
          [32m+[0m [0m[1m[0mautomatically_after_days[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mduration[0m[0m                 = (known after apply)
          [32m+[0m [0m[1m[0mschedule_expression[0m[0m      = (known after apply)
        }
    }

[1m  # aws_secretsmanager_secret_version.my_secret_version[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_secretsmanager_secret_version" "my_secret_version" {
      [32m+[0m [0m[1m[0marn[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0msecret_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0msecret_string[0m[0m  = (sensitive value)
      [32m+[0m [0m[1m[0mversion_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mversion_stages[0m[0m = (known after apply)
    }

[0m[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0msecret_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0msecret_name[0m[0m = "krny-moodys-secret-uat"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawler"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--filepath"                = "cleaned-data/google_trends/"
          [32m+[0m [0m"--folder"                  = "raw-data/google"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--max_capacity"            = "1"
          [32m+[0m [0m"--prefix"                  = "raw-data/google_trends1/1900-01-01/"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source google"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "transformation-google"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny_trnsf_google.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"transformation-google",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_group.group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_group" "group" {
      [32m+[0m [0m[1m[0marn[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m      = "da-grp"
      [32m+[0m [0m[1m[0mpath[0m[0m      = "/"
      [32m+[0m [0m[1m[0munique_id[0m[0m = (known after apply)
    }

[1m  # aws_iam_group_membership.group_membership[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_group_membership" "group_membership" {
      [32m+[0m [0m[1m[0mgroup[0m[0m = "da-grp"
      [32m+[0m [0m[1m[0mid[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m  = "da-grp"
      [32m+[0m [0m[1m[0musers[0m[0m = [
          [32m+[0m [0m"spi-da-1",
        ]
    }

[1m  # aws_iam_group_membership.group_membership[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_group_membership" "group_membership" {
      [32m+[0m [0m[1m[0mgroup[0m[0m = "da-grp"
      [32m+[0m [0m[1m[0mid[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m  = "da-grp"
      [32m+[0m [0m[1m[0musers[0m[0m = [
          [32m+[0m [0m"spi-da-2",
        ]
    }

[1m  # aws_iam_policy_attachment.policy_attachment[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy_attachment" "policy_attachment" {
      [32m+[0m [0m[1m[0mgroups[0m[0m     = [
          [32m+[0m [0m"da-grp",
        ]
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m       = "name"
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::111122223333:policy/name"
    }

[1m  # aws_iam_user.users[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_user" "users" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "spi-da-1"
      [32m+[0m [0m[1m[0mpath[0m[0m          = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m      = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m     = (known after apply)
    }

[1m  # aws_iam_user.users[1][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_user" "users" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "spi-da-2"
      [32m+[0m [0m[1m[0mpath[0m[0m          = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m      = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m     = (known after apply)
    }

[0m[1mPlan:[0m 6 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_user_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_user_name[0m[0m = "spi-da-1"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_security_group.this_name_prefix[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "this_name_prefix" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Lambda Security Group"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "lambda-sg-"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "lambda-sg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "lambda-sg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = "vpc-0a78757115e951e16"

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "10m"
          [32m+[0m [0m[1m[0mdelete[0m[0m = "15m"
        }
    }

[1m  # aws_security_group_rule.egress_with_cidr_blocks[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_cidr_blocks" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "All outbound port is opened"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 65535
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # aws_security_group_rule.ingress_rules[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_rules" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "HTTP"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 80
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_blocks[0m[0m         = []
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 80
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0msecurity_group_arn[0m[0m         = (known after apply)
  [32m+[0m [0m[1m[0msecurity_group_description[0m[0m = "Lambda Security Group"
  [32m+[0m [0m[1m[0msecurity_group_id[0m[0m          = (known after apply)
  [32m+[0m [0m[1m[0msecurity_group_name[0m[0m        = (known after apply)
  [32m+[0m [0m[1m[0msecurity_group_owner_id[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0msecurity_group_vpc_id[0m[0m      = "vpc-0a78757115e951e16"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--config"                  = "raw-data/moodys_188/config"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawler"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--folder"                  = "raw-data/moodys_188/data"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--max_capacity"            = "1"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source moodys 188"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "transformation-moodys-188"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny_trnsf_moodys_188.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"transformation-moodys-188",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawler"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--folder"                  = "raw-data/ihs"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--max_capacity"            = "1"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source ihs"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "transformation-ihs"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny_trnsf_ihs.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"transformation-ihs",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--config"                  = "raw-data/moodys_all/config"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawler"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--folder"                  = "raw-data/moodys_all/data"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--max_capacity"            = "1"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source moodys all"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "transformation-moodys"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny_trnsf_moodys.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"transformation-moodys",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_iam_group.group[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_group" "group" {
      [32m+[0m [0m[1m[0marn[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m      = "lake-formation-group"
      [32m+[0m [0m[1m[0mpath[0m[0m      = "/"
      [32m+[0m [0m[1m[0munique_id[0m[0m = (known after apply)
    }

[1m  # aws_iam_group_membership.group_membership[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_group_membership" "group_membership" {
      [32m+[0m [0m[1m[0mgroup[0m[0m = "lake-formation-group"
      [32m+[0m [0m[1m[0mid[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m  = "lake-formation-group"
      [32m+[0m [0m[1m[0musers[0m[0m = [
          [32m+[0m [0m"lakeuser",
        ]
    }

[1m  # aws_iam_policy_attachment.policy_attachment[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_policy_attachment" "policy_attachment" {
      [32m+[0m [0m[1m[0mgroups[0m[0m     = [
          [32m+[0m [0m"lake-formation-group",
        ]
      [32m+[0m [0m[1m[0mid[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m       = "name"
      [32m+[0m [0m[1m[0mpolicy_arn[0m[0m = "arn:aws:iam::111122223333:policy/name"
    }

[1m  # aws_iam_user.users[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_iam_user" "users" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mforce_destroy[0m[0m = false
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "lakeuser"
      [32m+[0m [0m[1m[0mpath[0m[0m          = "/"
      [32m+[0m [0m[1m[0mtags_all[0m[0m      = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0munique_id[0m[0m     = (known after apply)
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0miam_user_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0miam_user_name[0m[0m = "lakeuser"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawler"
          [32m+[0m [0m"--dpu"                     = "1"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--extra-py-files"          = "s3://krny-spi-codebase-uat/glue/python-packages/meteostat-1.6.5-py3-none-any.whl"
          [32m+[0m [0m"--file_name"               = "Meteostat_clean"
          [32m+[0m [0m"--folder"                  = "raw-data/meteostat/data/"
          [32m+[0m [0m"--gluejobname"             = "transformation-meteostat"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--mapper"                  = "s3://krny-spi-ext-sources-uat/raw-data/meteostat/config/Mappedweatherstation_by_City.csv"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source ingestion meteostat"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "ingestion-meteostat"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny-meteostat.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"ingestion-meteostat",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawler"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--folder"                  = "raw-data/yahoo_finance"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--max_capacity"            = "1"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
          [32m+[0m [0m"--table_name"              = "krny-yahoo-securities"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source yahoofin"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "transformation-yahoofin"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name4"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny_trnsf_yahoofin.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"transformation-yahoofin",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_security_group.this_name_prefix[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group" "this_name_prefix" {
      [32m+[0m [0m[1m[0marn[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m            = "Sagemaker Security Group"
      [32m+[0m [0m[1m[0megress[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mingress[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                   = (known after apply)
      [32m+[0m [0m[1m[0mname_prefix[0m[0m            = "sagemaker-sg-"
      [32m+[0m [0m[1m[0mowner_id[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mrevoke_rules_on_delete[0m[0m = false
      [32m+[0m [0m[1m[0mtags[0m[0m                   = {
          [32m+[0m [0m"Name" = "sagemaker-sg"
        }
      [32m+[0m [0m[1m[0mtags_all[0m[0m               = {
          [32m+[0m [0m"Name" = "sagemaker-sg"
        }
      [32m+[0m [0m[1m[0mvpc_id[0m[0m                 = "vpc-0a78757115e951e16"

      [32m+[0m [0mtimeouts {
          [32m+[0m [0m[1m[0mcreate[0m[0m = "10m"
          [32m+[0m [0m[1m[0mdelete[0m[0m = "15m"
        }
    }

[1m  # aws_security_group_rule.egress_with_cidr_blocks[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "egress_with_cidr_blocks" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "All outbound port is opened"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 0
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 65535
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "egress"
    }

[1m  # aws_security_group_rule.ingress_rules[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_security_group_rule" "ingress_rules" {
      [32m+[0m [0m[1m[0mcidr_blocks[0m[0m              = [
          [32m+[0m [0m"0.0.0.0/0",
        ]
      [32m+[0m [0m[1m[0mdescription[0m[0m              = "HTTP"
      [32m+[0m [0m[1m[0mfrom_port[0m[0m                = 80
      [32m+[0m [0m[1m[0mid[0m[0m                       = (known after apply)
      [32m+[0m [0m[1m[0mipv6_cidr_blocks[0m[0m         = []
      [32m+[0m [0m[1m[0mprefix_list_ids[0m[0m          = []
      [32m+[0m [0m[1m[0mprotocol[0m[0m                 = "tcp"
      [32m+[0m [0m[1m[0msecurity_group_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0msecurity_group_rule_id[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mself[0m[0m                     = false
      [32m+[0m [0m[1m[0msource_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mto_port[0m[0m                  = 80
      [32m+[0m [0m[1m[0mtype[0m[0m                     = "ingress"
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0msecurity_group_arn[0m[0m         = (known after apply)
  [32m+[0m [0m[1m[0msecurity_group_description[0m[0m = "Sagemaker Security Group"
  [32m+[0m [0m[1m[0msecurity_group_id[0m[0m          = (known after apply)
  [32m+[0m [0m[1m[0msecurity_group_name[0m[0m        = (known after apply)
  [32m+[0m [0m[1m[0msecurity_group_owner_id[0m[0m    = (known after apply)
  [32m+[0m [0m[1m[0msecurity_group_vpc_id[0m[0m      = "vpc-0a78757115e951e16"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawley"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--folder"                  = "raw-data/meteostat"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--mapped_file"             = "raw-data/meteostat/config/Mappedweatherstation_by_City.csv"
          [32m+[0m [0m"--max_capacity"            = "1"
          [32m+[0m [0m"--region_file"             = "raw-data/meteostat/config/US_State_Region.csv"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source meteostat"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "transformation-meteostat"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny_trnsf_meteostat.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"transformation-meteostat",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_crawler.crawler1[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_crawler" "crawler1" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mclassifiers[0m[0m   = [
          [32m+[0m [0m"classifier-name-1",
        ]
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mdescription[0m[0m   = "Transformed data Glue Crawler"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "transformeddata-crawler"
      [32m+[0m [0m[1m[0mrole[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m      = (known after apply)

      [32m+[0m [0mcatalog_target {
          [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
          [32m+[0m [0m[1m[0mtables[0m[0m        = [
              [32m+[0m [0m"tfdata_covid",
              [32m+[0m [0m"tfdata_google_trends",
              [32m+[0m [0m"tfdata_fred",
              [32m+[0m [0m"tfdata_meteostat",
              [32m+[0m [0m"tfdata_similar_web",
              [32m+[0m [0m"tfdata_yahoo_finance",
              [32m+[0m [0m"tfdata_moodys",
              [32m+[0m [0m"tfdata_moodys_188",
              [32m+[0m [0m"tfdata_mnemonics",
              [32m+[0m [0m"tfdata_ihs_historical",
              [32m+[0m [0m"tfdata_ihs_pp",
            ]
        }

      [32m+[0m [0mschema_change_policy {
          [32m+[0m [0m[1m[0mdelete_behavior[0m[0m = "LOG"
          [32m+[0m [0m[1m[0mupdate_behavior[0m[0m = "UPDATE_IN_DATABASE"
        }
    }

[1m  # aws_glue_crawler.crawler2[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_crawler" "crawler2" {
      [32m+[0m [0m[1m[0marn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mclassifiers[0m[0m   = [
          [32m+[0m [0m"classifier-name-2",
        ]
      [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
      [32m+[0m [0m[1m[0mdescription[0m[0m   = "Transformed data Glue Crawler"
      [32m+[0m [0m[1m[0mid[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m          = "cleaneddata-crawler"
      [32m+[0m [0m[1m[0mrole[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m      = (known after apply)

      [32m+[0m [0mcatalog_target {
          [32m+[0m [0m[1m[0mdatabase_name[0m[0m = "aws_athena"
          [32m+[0m [0m[1m[0mtables[0m[0m        = [
              [32m+[0m [0m"cldata_covid",
              [32m+[0m [0m"cldata_google_trends",
              [32m+[0m [0m"cldata_fred",
              [32m+[0m [0m"cldata_meteostat",
              [32m+[0m [0m"cldata_similar_web",
              [32m+[0m [0m"cldata_moodys",
              [32m+[0m [0m"cldata_moodys_188",
              [32m+[0m [0m"cldata_yahoo_finance",
              [32m+[0m [0m"cldata_ihs_historical",
              [32m+[0m [0m"cldata_ihs_pp",
            ]
        }

      [32m+[0m [0mschema_change_policy {
          [32m+[0m [0m[1m[0mdelete_behavior[0m[0m = "LOG"
          [32m+[0m [0m[1m[0mupdate_behavior[0m[0m = "UPDATE_IN_DATABASE"
        }
    }

[0m[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mcrawler1_name[0m[0m = "transformeddata-crawler"
  [32m+[0m [0m[1m[0mcrawler2_name[0m[0m = "cleaneddata-crawler"
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawlery"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--folder"                  = "raw-data/fred"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--mapper"                  = "krny-fred"
          [32m+[0m [0m"--max_capacity"            = "1"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source fred"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "transformation-fred"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny_trnsf_fred.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"transformation-fred",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_glue_job.main[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_glue_job" "main" {
      [32m+[0m [0m[1m[0marn[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mdefault_arguments[0m[0m = {
          [32m+[0m [0m"--TempDir"                 = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/temp-dir/"
          [32m+[0m [0m"--bucket"                  = "krny-spi-ext-sources-uat"
          [32m+[0m [0m"--crawler_cleaneddata"     = "cleaneddata-crawler"
          [32m+[0m [0m"--crawler_transformeddata" = "transformeddata-crawler"
          [32m+[0m [0m"--dpu"                     = "1"
          [32m+[0m [0m"--enable-glue-datacatalog" = "true"
          [32m+[0m [0m"--enable-job-insights"     = "false"
          [32m+[0m [0m"--folder"                  = "raw-data/covid"
          [32m+[0m [0m"--irm_file"                = "raw-data/covid/covidexternal/covidexternal3.csv"
          [32m+[0m [0m"--job-bookmark-option"     = "job-bookmark-disable"
          [32m+[0m [0m"--job-language"            = "python"
          [32m+[0m [0m"--job-type"                = "pythonshell"
          [32m+[0m [0m"--library-set"             = "analytics"
          [32m+[0m [0m"--max_capacity"            = "1"
          [32m+[0m [0m"--security-configuration"  = "your_security_configuration_name"
        }
      [32m+[0m [0m[1m[0mdescription[0m[0m       = "Glue transformation job for source covid"
      [32m+[0m [0m[1m[0mexecution_class[0m[0m   = "STANDARD"
      [32m+[0m [0m[1m[0mglue_version[0m[0m      = "3.0"
      [32m+[0m [0m[1m[0mid[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mmax_capacity[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mmax_retries[0m[0m       = 0
      [32m+[0m [0m[1m[0mname[0m[0m              = "transformation-covid"
      [32m+[0m [0m[1m[0mrole_arn[0m[0m          = "arn:aws:iam::123456789012:role/role_name"
      [32m+[0m [0m[1m[0mtags_all[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mtimeout[0m[0m           = 2880

      [32m+[0m [0mcommand {
          [32m+[0m [0m[1m[0mname[0m[0m            = "pythonshell"
          [32m+[0m [0m[1m[0mpython_version[0m[0m  = "3.9"
          [32m+[0m [0m[1m[0mscript_location[0m[0m = "s3://krny-spi-codebase-uat/glue/python-shell-scripts/krny_trnsf_covid.py"
        }

      [32m+[0m [0mexecution_property {
          [32m+[0m [0m[1m[0mmax_concurrent_runs[0m[0m = 1
        }

      [32m+[0m [0mnotification_property {
          [32m+[0m [0m[1m[0mnotify_delay_after[0m[0m = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0mglue_job_name[0m[0m = [
      [32m+[0m [0m"transformation-covid",
    ]
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "ingestion-googletrends-child"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.7"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/googletrendschild/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"bucket"       = "bucket-name"
              [32m+[0m [0m"dynamo_table" = "dynamo-name"
              [32m+[0m [0m"file_path"    = "raw-data/google_trends1/1900-01-01/"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "ingestion-googletrends-child"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:ingestion-googletrends-child"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"bucket"       = "bucket-name"
          [32m+[0m [0m"dynamo_table" = "dynamo-name"
          [32m+[0m [0m"file_path"    = "raw-data/google_trends1/1900-01-01/"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "python3.7"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/googletrendschild/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "ingestion-similarweb"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.9"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/similar_web/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"bucket"                = "bucket-name"
              [32m+[0m [0m"conversion_filename"   = "conversion_dashboard.csv"
              [32m+[0m [0m"conversion_sheet"      = "Direct"
              [32m+[0m [0m"gluejobname"           = "jobname"
              [32m+[0m [0m"path"                  = "raw-data/similar_web/data/"
              [32m+[0m [0m"prefix_conversion"     = "raw-data/similar_web/manual_upload/raw_conversion_dashboard/"
              [32m+[0m [0m"prefix_totaltraffic"   = "raw-data/similar_web/manual_upload/raw_totaltraffic_sources/"
              [32m+[0m [0m"totaltraffic_filename" = "totaltraffic_sources.csv"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "ingestion-similarweb"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:ingestion-similarweb"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"bucket"                = "bucket-name"
          [32m+[0m [0m"conversion_filename"   = "conversion_dashboard.csv"
          [32m+[0m [0m"conversion_sheet"      = "Direct"
          [32m+[0m [0m"gluejobname"           = "jobname"
          [32m+[0m [0m"path"                  = "raw-data/similar_web/data/"
          [32m+[0m [0m"prefix_conversion"     = "raw-data/similar_web/manual_upload/raw_conversion_dashboard/"
          [32m+[0m [0m"prefix_totaltraffic"   = "raw-data/similar_web/manual_upload/raw_totaltraffic_sources/"
          [32m+[0m [0m"totaltraffic_filename" = "totaltraffic_sources.csv"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "python3.9"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/similar_web/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:


Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "ingestion-similarweb-client"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.9"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/similar_web/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"conversion_filename"   = "conversion_dashboard.csv"
              [32m+[0m [0m"conversion_sheet"      = "Direct"
              [32m+[0m [0m"folder"                = "raw-data/similar_web"
              [32m+[0m [0m"path"                  = "raw-data/similar_web/data/"
              [32m+[0m [0m"prefix_conversion"     = "raw-data/similar_web/manual_upload/raw_conversion_dashboard/"
              [32m+[0m [0m"prefix_totaltraffic"   = "raw-data/similar_web/manual_upload/raw_totaltraffic_sources/"
              [32m+[0m [0m"totaltraffic_filename" = "totaltraffic_sources.csv"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "ingestion-similarweb-client"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:ingestion-similarweb-client"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"conversion_filename"   = "conversion_dashboard.csv"
          [32m+[0m [0m"conversion_sheet"      = "Direct"
          [32m+[0m [0m"folder"                = "raw-data/similar_web"
          [32m+[0m [0m"path"                  = "raw-data/similar_web/data/"
          [32m+[0m [0m"prefix_conversion"     = "raw-data/similar_web/manual_upload/raw_conversion_dashboard/"
          [32m+[0m [0m"prefix_totaltraffic"   = "raw-data/similar_web/manual_upload/raw_totaltraffic_sources/"
          [32m+[0m [0m"totaltraffic_filename" = "totaltraffic_sources.csv"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "python3.9"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/similar_web/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "krny-load-s3-dynamodb"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = []
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.9"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/dynamodb-upload/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "krny-load-s3-dynamodb"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:krny-load-s3-dynamodb"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {}
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = []
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "python3.9"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/dynamodb-upload/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "ingestion-ihs"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.9"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/ihs/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"bucket"                 = "bucket-name"
              [32m+[0m [0m"file_name_PP"           = "Pricing and Purchasing Historical Price-Building Material_v1116"
              [32m+[0m [0m"file_name_historical"   = "IHS_Economic_History_v1116"
              [32m+[0m [0m"folder_path_PP"         = "raw-data/ihs/data/ihs-pp/"
              [32m+[0m [0m"folder_path_historical" = "raw-data/ihs/data/ihs-historical/"
              [32m+[0m [0m"gluejobname"            = "jobname"
              [32m+[0m [0m"prefix_PP"              = "raw-data/ihs/manual-upload/ihs-pp/"
              [32m+[0m [0m"prefix_historical"      = "raw-data/ihs/manual-upload/ihs-historical/"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "ingestion-ihs"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:ingestion-ihs"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"bucket"                 = "bucket-name"
          [32m+[0m [0m"file_name_PP"           = "Pricing and Purchasing Historical Price-Building Material_v1116"
          [32m+[0m [0m"file_name_historical"   = "IHS_Economic_History_v1116"
          [32m+[0m [0m"folder_path_PP"         = "raw-data/ihs/data/ihs-pp/"
          [32m+[0m [0m"folder_path_historical" = "raw-data/ihs/data/ihs-historical/"
          [32m+[0m [0m"gluejobname"            = "jobname"
          [32m+[0m [0m"prefix_PP"              = "raw-data/ihs/manual-upload/ihs-pp/"
          [32m+[0m [0m"prefix_historical"      = "raw-data/ihs/manual-upload/ihs-historical/"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "python3.9"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/ihs/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "ingestion-moodys-188"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/aws-role"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.9"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/moodys-manual/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"bucket"              = "bucket-name"
              [32m+[0m [0m"file_name_monthly"   = "moodys_monthly.csv"
              [32m+[0m [0m"file_name_quarterly" = "moodys_quarterly.csv"
              [32m+[0m [0m"file_name_yearly"    = "moodys_yearly.csv"
              [32m+[0m [0m"file_prefix"         = "raw-data/moodys_188/manual_upload/"
              [32m+[0m [0m"folder_path"         = "raw-data/moodys_188/data/"
              [32m+[0m [0m"gluejobname"         = "jobname"
              [32m+[0m [0m"mapping_file_name"   = "moodys_188_mnemonics.csv"
              [32m+[0m [0m"mapping_file_path"   = "raw-data/moodys_188/config/"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "ingestion-moodys-188"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:ingestion-moodys-188"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"bucket"              = "bucket-name"
          [32m+[0m [0m"file_name_monthly"   = "moodys_monthly.csv"
          [32m+[0m [0m"file_name_quarterly" = "moodys_quarterly.csv"
          [32m+[0m [0m"file_name_yearly"    = "moodys_yearly.csv"
          [32m+[0m [0m"file_prefix"         = "raw-data/moodys_188/manual_upload/"
          [32m+[0m [0m"folder_path"         = "raw-data/moodys_188/data/"
          [32m+[0m [0m"gluejobname"         = "jobname"
          [32m+[0m [0m"mapping_file_name"   = "moodys_188_mnemonics.csv"
          [32m+[0m [0m"mapping_file_path"   = "raw-data/moodys_188/config/"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/aws-role"
      [32m+[0m [0mruntime                        = "python3.9"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/moodys-manual/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "ingestion-yahoofin"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.9"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/yahoo_function/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"bucket"         = "bucket-name"
              [32m+[0m [0m"dynamodb_table" = "dynamo-name"
              [32m+[0m [0m"file_name"      = "yahoo.csv"
              [32m+[0m [0m"file_path"      = "raw-data/yahoo_finance/"
              [32m+[0m [0m"gluejobname"    = "jobname"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "ingestion-yahoofin"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:ingestion-yahoofin"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"bucket"         = "bucket-name"
          [32m+[0m [0m"dynamodb_table" = "dynamo-name"
          [32m+[0m [0m"file_name"      = "yahoo.csv"
          [32m+[0m [0m"file_path"      = "raw-data/yahoo_finance/"
          [32m+[0m [0m"gluejobname"    = "jobname"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "python3.9"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/yahoo_function/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 1s [id=993809450021][0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "ingestion-covid"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.9"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/covid/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"base_url"            = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports_us/"
              [32m+[0m [0m"bucket"              = "bucket-name"
              [32m+[0m [0m"covidcases_filename" = "covidcases.csv"
              [32m+[0m [0m"gluejobname"         = "jobname"
              [32m+[0m [0m"prefix"              = "raw-data/covid/data/"
              [32m+[0m [0m"url"                 = "https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/time_series_covid19_vaccine_us.csv"
              [32m+[0m [0m"vaccine_filename"    = "vaccinedata.csv"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "ingestion-covid"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:ingestion-covid"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"base_url"            = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports_us/"
          [32m+[0m [0m"bucket"              = "bucket-name"
          [32m+[0m [0m"covidcases_filename" = "covidcases.csv"
          [32m+[0m [0m"gluejobname"         = "jobname"
          [32m+[0m [0m"prefix"              = "raw-data/covid/data/"
          [32m+[0m [0m"url"                 = "https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/time_series_covid19_vaccine_us.csv"
          [32m+[0m [0m"vaccine_filename"    = "vaccinedata.csv"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "python3.9"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/covid/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "client-data-transformation"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "index.handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "nodejs18.x"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/client-data/lambda_function.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"base_url"            = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports_us/"
              [32m+[0m [0m"bucket"              = "bucket-name"
              [32m+[0m [0m"covidcases_filename" = "covidcases.csv"
              [32m+[0m [0m"gluejobname"         = "jobname"
              [32m+[0m [0m"prefix"              = "raw-data/covid/data/"
              [32m+[0m [0m"url"                 = "https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/time_series_covid19_vaccine_us.csv"
              [32m+[0m [0m"vaccine_filename"    = "vaccinedata.csv"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "client-data-transformation"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:client-data-transformation"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"base_url"            = "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports_us/"
          [32m+[0m [0m"bucket"              = "bucket-name"
          [32m+[0m [0m"covidcases_filename" = "covidcases.csv"
          [32m+[0m [0m"gluejobname"         = "jobname"
          [32m+[0m [0m"prefix"              = "raw-data/covid/data/"
          [32m+[0m [0m"url"                 = "https://raw.githubusercontent.com/govex/COVID-19/master/data_tables/vaccine_data/us_data/time_series/time_series_covid19_vaccine_us.csv"
          [32m+[0m [0m"vaccine_filename"    = "vaccinedata.csv"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "index.handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:287882505924:layer:demo:14",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "nodejs18.x"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/client-data/lambda_function.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_region.current: Reading...[0m[0m
[0m[1mdata.aws_caller_identity.current: Reading...[0m[0m
[0m[1mdata.aws_region.current: Read complete after 0s [id=us-east-1][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m
[0m[1mdata.aws_caller_identity.current: Read complete after 0s [id=993809450021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "ingestion-googletrends-client"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:396112814485:layer:new_pytrends:1",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.8"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/googletrendsclient/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"dynamodb"    = "dynamo-name"
              [32m+[0m [0m"env"         = "uat"
              [32m+[0m [0m"krny_bucket" = "bucket-name"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "ingestion-googletrends-client"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:ingestion-googletrends-client"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"dynamodb"    = "dynamo-name"
          [32m+[0m [0m"env"         = "uat"
          [32m+[0m [0m"krny_bucket" = "bucket-name"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:396112814485:layer:new_pytrends:1",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "python3.8"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/googletrendsclient/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_lambda_function.lambda[0][0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_function" "lambda" {
      [32m+[0m [0m[1m[0marchitectures[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0marn[0m[0m                            = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m                    = "Lambda Function"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m                  = "ingestion-googletrends-parent"
      [32m+[0m [0m[1m[0mhandler[0m[0m                        = "lambda_function.lambda_handler"
      [32m+[0m [0m[1m[0mid[0m[0m                             = (known after apply)
      [32m+[0m [0m[1m[0minvoke_arn[0m[0m                     = (known after apply)
      [32m+[0m [0m[1m[0mlast_modified[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mlayers[0m[0m                         = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python37:4",
        ]
      [32m+[0m [0m[1m[0mmemory_size[0m[0m                    = 3008
      [32m+[0m [0m[1m[0mpackage_type[0m[0m                   = "Zip"
      [32m+[0m [0m[1m[0mpublish[0m[0m                        = false
      [32m+[0m [0m[1m[0mqualified_arn[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mqualified_invoke_arn[0m[0m           = (known after apply)
      [32m+[0m [0m[1m[0mreserved_concurrent_executions[0m[0m = -1
      [32m+[0m [0m[1m[0mrole[0m[0m                           = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0m[1m[0mruntime[0m[0m                        = "python3.7"
      [32m+[0m [0m[1m[0ms3_bucket[0m[0m                      = "396112814485-codebase"
      [32m+[0m [0m[1m[0ms3_key[0m[0m                         = "functions/googletrendsparent/lambda_function.py.zip"
      [32m+[0m [0m[1m[0msigning_job_arn[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0msigning_profile_version_arn[0m[0m    = (known after apply)
      [32m+[0m [0m[1m[0mskip_destroy[0m[0m                   = false
      [32m+[0m [0m[1m[0msource_code_hash[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0msource_code_size[0m[0m               = (known after apply)
      [32m+[0m [0m[1m[0mtags_all[0m[0m                       = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
      [32m+[0m [0m[1m[0mtimeout[0m[0m                        = 900
      [32m+[0m [0m[1m[0mversion[0m[0m                        = (known after apply)

      [32m+[0m [0menvironment {
          [32m+[0m [0m[1m[0mvariables[0m[0m = {
              [32m+[0m [0m"bucket"       = "bucket-name"
              [32m+[0m [0m"dynamo_table" = "dynamo-name"
              [32m+[0m [0m"function_arn" = "arn:aws:lambda:us-east-1:111122223411:function:name"
              [32m+[0m [0m"gluejobname"  = "jobname"
            }
        }

      [32m+[0m [0mephemeral_storage {
          [32m+[0m [0m[1m[0msize[0m[0m = 10000
        }

      [32m+[0m [0mtracing_config {
          [32m+[0m [0m[1m[0mmode[0m[0m = (known after apply)
        }

      [32m+[0m [0mvpc_config {
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = [
              [32m+[0m [0m"sg-1234",
            ]
          [32m+[0m [0m[1m[0msubnet_ids[0m[0m         = [
              [32m+[0m [0m"subnet-1234",
            ]
          [32m+[0m [0m[1m[0mvpc_id[0m[0m             = (known after apply)
        }
    }

[0m[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[0m
[1mChanges to Outputs:[0m[0m
  [32m+[0m [0m[1m[0maliases[0m[0m              = {}
  [32m+[0m [0m[1m[0mfunction[0m[0m             = (known after apply)
  [32m+[0m [0m[1m[0mfunction_name[0m[0m        = "ingestion-googletrends-parent"
  [32m+[0m [0m[1m[0mguessed_function_arn[0m[0m = "arn:aws:lambda:us-east-1:993809450021:function:ingestion-googletrends-parent"
  [32m+[0m [0m[1m[0mlambda_function_arn[0m[0m  = (known after apply)
  [32m+[0m [0m[1m[0mmodule_enabled[0m[0m       = true
  [32m+[0m [0m[1m[0mmodule_inputs[0m[0m        = {
      [32m+[0m [0maliases                        = {}
      [32m+[0m [0mdead_letter_config_target_arn  = ""
      [32m+[0m [0mdescription                    = "Lambda Function"
      [32m+[0m [0menvironment_variables          = {
          [32m+[0m [0m"bucket"       = "bucket-name"
          [32m+[0m [0m"dynamo_table" = "dynamo-name"
          [32m+[0m [0m"function_arn" = "arn:aws:lambda:us-east-1:111122223411:function:name"
          [32m+[0m [0m"gluejobname"  = "jobname"
        }
      [32m+[0m [0mfilename                       = [90mnull[0m[0m
      [32m+[0m [0mfunction_tags                  = {}
      [32m+[0m [0mhandler                        = "lambda_function.lambda_handler"
      [32m+[0m [0mkms_key_arn                    = [90mnull[0m[0m
      [32m+[0m [0mlayer_arns                     = [
          [32m+[0m [0m"arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python37:4",
        ]
      [32m+[0m [0mmemory_size                    = 3008
      [32m+[0m [0mpermissions                    = []
      [32m+[0m [0mpublish                        = false
      [32m+[0m [0mreserved_concurrent_executions = -1
      [32m+[0m [0mrole_arn                       = "arn:aws:iam::396112814485:role/terraform"
      [32m+[0m [0mruntime                        = "python3.7"
      [32m+[0m [0ms3_bucket                      = "396112814485-codebase"
      [32m+[0m [0ms3_key                         = "functions/googletrendsparent/lambda_function.py.zip"
      [32m+[0m [0ms3_object_version              = [90mnull[0m[0m
      [32m+[0m [0msource_code_hash               = [90mnull[0m[0m
      [32m+[0m [0mtimeout                        = 900
      [32m+[0m [0mtracing_mode                   = [90mnull[0m[0m
      [32m+[0m [0mvpc_security_group_ids         = [
          [32m+[0m [0m"sg-1234",
        ]
      [32m+[0m [0mvpc_subnet_ids                 = [
          [32m+[0m [0m"subnet-1234",
        ]
    }
  [32m+[0m [0m[1m[0mmodule_tags[0m[0m          = {}
  [32m+[0m [0m[1m[0mpermissions[0m[0m          = {}
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_cloudwatch_event_rule.event_rule[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_event_rule" "event_rule" {
      [32m+[0m [0m[1m[0marn[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m         = "A rule to trigger yahoo function on a schedule i.e 30 days"
      [32m+[0m [0m[1m[0mevent_bus_name[0m[0m      = "default"
      [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m          = true
      [32m+[0m [0m[1m[0mname[0m[0m                = "yahoo_event_rule"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mschedule_expression[0m[0m = "rate(30 days)"
      [32m+[0m [0m[1m[0mtags_all[0m[0m            = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_cloudwatch_event_target.event_target[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_event_target" "event_target" {
      [32m+[0m [0m[1m[0marn[0m[0m            = "arn:aws:lambda:us-east-1:111122223312:function:test-2"
      [32m+[0m [0m[1m[0mevent_bus_name[0m[0m = "default"
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mrule[0m[0m           = "yahoo_event_rule"
      [32m+[0m [0m[1m[0mtarget_id[0m[0m      = (known after apply)
    }

[1m  # aws_lambda_permission.eventbridge[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_permission" "eventbridge" {
      [32m+[0m [0m[1m[0maction[0m[0m              = "lambda:InvokeFunction"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m       = "function-name"
      [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mprincipal[0m[0m           = "events.amazonaws.com"
      [32m+[0m [0m[1m[0msource_arn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mstatement_id[0m[0m        = "AllowExecutionFromEventBridge"
      [32m+[0m [0m[1m[0mstatement_id_prefix[0m[0m = (known after apply)
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_cloudwatch_event_rule.event_rule[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_event_rule" "event_rule" {
      [32m+[0m [0m[1m[0marn[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m         = "A rule to trigger my lambda function on a schedule"
      [32m+[0m [0m[1m[0mevent_bus_name[0m[0m      = "default"
      [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m          = true
      [32m+[0m [0m[1m[0mname[0m[0m                = "covid-event-rule"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mschedule_expression[0m[0m = "rate(30 days)"
      [32m+[0m [0m[1m[0mtags_all[0m[0m            = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_cloudwatch_event_target.event_target[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_event_target" "event_target" {
      [32m+[0m [0m[1m[0marn[0m[0m            = "arn:aws:lambda:us-east-1:111122223333:function:test"
      [32m+[0m [0m[1m[0mevent_bus_name[0m[0m = "default"
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mrule[0m[0m           = "covid-event-rule"
      [32m+[0m [0m[1m[0mtarget_id[0m[0m      = (known after apply)
    }

[1m  # aws_lambda_permission.eventbridge[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_permission" "eventbridge" {
      [32m+[0m [0m[1m[0maction[0m[0m              = "lambda:InvokeFunction"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m       = "function-name"
      [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mprincipal[0m[0m           = "events.amazonaws.com"
      [32m+[0m [0m[1m[0msource_arn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mstatement_id[0m[0m        = "AllowExecutionFromEventBridge"
      [32m+[0m [0m[1m[0mstatement_id_prefix[0m[0m = (known after apply)
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # aws_cloudwatch_event_rule.event_rule[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_event_rule" "event_rule" {
      [32m+[0m [0m[1m[0marn[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mdescription[0m[0m         = "A rule to trigger yahoo function on a schedule i.e 30 days"
      [32m+[0m [0m[1m[0mevent_bus_name[0m[0m      = "default"
      [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mis_enabled[0m[0m          = true
      [32m+[0m [0m[1m[0mname[0m[0m                = "fred_event_rule"
      [32m+[0m [0m[1m[0mname_prefix[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mschedule_expression[0m[0m = "rate(30 days)"
      [32m+[0m [0m[1m[0mtags_all[0m[0m            = {
          [32m+[0m [0m"CreatedBy"   = "platform-team"
          [32m+[0m [0m"Environment" = "uat"
          [32m+[0m [0m"Expiry"      = "NA"
          [32m+[0m [0m"Owner"       = "Xebia"
          [32m+[0m [0m"Project"     = "Kearney"
          [32m+[0m [0m"Terraform"   = "true"
        }
    }

[1m  # aws_cloudwatch_event_target.event_target[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_cloudwatch_event_target" "event_target" {
      [32m+[0m [0m[1m[0marn[0m[0m            = "arn:aws:lambda:us-east-1:111122223333:function:test-2"
      [32m+[0m [0m[1m[0mevent_bus_name[0m[0m = "default"
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mrule[0m[0m           = "fred_event_rule"
      [32m+[0m [0m[1m[0mtarget_id[0m[0m      = (known after apply)
    }

[1m  # aws_lambda_permission.eventbridge[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "aws_lambda_permission" "eventbridge" {
      [32m+[0m [0m[1m[0maction[0m[0m              = "lambda:InvokeFunction"
      [32m+[0m [0m[1m[0mfunction_name[0m[0m       = "function-name"
      [32m+[0m [0m[1m[0mid[0m[0m                  = (known after apply)
      [32m+[0m [0m[1m[0mprincipal[0m[0m           = "events.amazonaws.com"
      [32m+[0m [0m[1m[0msource_arn[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mstatement_id[0m[0m        = "AllowExecutionFromEventBridge"
      [32m+[0m [0m[1m[0mstatement_id_prefix[0m[0m = (known after apply)
    }

[0m[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
